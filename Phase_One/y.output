Terminals unused in grammar

   STRING
   MAIN


State 57 conflicts: 2 shift/reduce


Grammar

    0 $accept: start $end

    1 start: func_decl
    2      | %empty

    3 func_decl: var_type FUNCTION variable '[' params ']' '{' statements '}'
    4          | var_type FUNCTION variable '[' params ']' '{' statements '}' func_decl

    5 variable: VAR

    6 params: variable ',' params
    7       | variable
    8       | %empty

    9 var_decl: var_type assignment

   10 statements: statement statements
   11           | %empty

   12 statement: var_decl ';'
   13          | func_decl
   14          | cond
   15          | loop
   16          | io ';'
   17          | assignment ';'
   18          | return ';'

   19 values: variable
   20       | value
   21       | array
   22       | variable '[' index
   23       | variable '(' func_params

   24 return: RETURN exp

   25 var_type: INTEGER
   26         | ARRAY var_type arr_len

   27 assignment: values set_val

   28 arr_len: variable
   29        | value

   30 set_val: '=' exp
   31        | %empty

   32 func_params: exp ',' func_params
   33            | exp ')'
   34            | ')'

   35 array: '{' arr_vals '}'
   36      | '{' '}'

   37 arr_vals: values ',' arr_vals
   38         | values

   39 index: values ']'

   40 io: READ variable
   41   | WRITE exp

   42 as: '+'
   43   | '-'

   44 p: '(' exp ')'

   45 md: '*'
   46   | '/'

   47 value: INT

   48 exp: exp as mult
   49    | mult

   50 mult: mult md factor
   51     | factor

   52 factor: p
   53       | values

   54 cond: IF '[' conditions ']' '{' statements '}' elseif

   55 elseif: ELSEIF '[' conditions ']' '{' statements '}' elseif
   56       | else

   57 else: ELSE '{' statements '}'
   58     | %empty

   59 loop: WHILE '[' conditions ']' '{' statements '}'

   60 condition: condition conditional exp
   61          | exp
   62          | '(' condition conditional exp ')'

   63 conditional: '>'
   64            | '<'
   65            | GTE
   66            | LTE
   67            | ISEQ
   68            | NOTEQ

   69 conditions: condition
   70           | condition AND conditions
   71           | condition OR conditions


Terminals, with rules where they appear

$end (0) 0
'(' (40) 23 44 62
')' (41) 33 34 44 62
'*' (42) 45
'+' (43) 42
',' (44) 6 32 37
'-' (45) 43
'/' (47) 46
';' (59) 12 16 17 18
'<' (60) 64
'=' (61) 30
'>' (62) 63
'[' (91) 3 4 22 54 55 59
']' (93) 3 4 39 54 55 59
'{' (123) 3 4 35 36 54 55 57 59
'}' (125) 3 4 35 36 54 55 57 59
error (256)
INTEGER (258) 25
STRING (259)
ARRAY (260) 26
FUNCTION (261) 3 4
IF (262) 54
ELSE (263) 57
WHILE (264) 59
READ (265) 40
WRITE (266) 41
ELSEIF (267) 55
GTE (268) 65
LTE (269) 66
ISEQ (270) 67
NOTEQ (271) 68
AND (272) 70
OR (273) 71
RETURN (274) 24
VAR (275) 5
MAIN (276)
INT (277) 47


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
variable (39)
    on left: 5, on right: 3 4 6 7 19 22 23 28 40
start (40)
    on left: 1 2, on right: 0
func_decl (41)
    on left: 3 4, on right: 1 4 13
statements (42)
    on left: 10 11, on right: 3 4 10 54 55 57 59
statement (43)
    on left: 12 13 14 15 16 17 18, on right: 10
var_decl (44)
    on left: 9, on right: 12
cond (45)
    on left: 54, on right: 14
loop (46)
    on left: 59, on right: 15
io (47)
    on left: 40 41, on right: 16
assignment (48)
    on left: 27, on right: 9 17
return (49)
    on left: 24, on right: 18
var_type (50)
    on left: 25 26, on right: 3 4 9 26
arr_len (51)
    on left: 28 29, on right: 26
value (52)
    on left: 47, on right: 20 29
set_val (53)
    on left: 30 31, on right: 27
exp (54)
    on left: 48 49, on right: 24 30 32 33 41 44 48 60 61 62
as (55)
    on left: 42 43, on right: 48
mult (56)
    on left: 50 51, on right: 48 49 50
md (57)
    on left: 45 46, on right: 50
factor (58)
    on left: 52 53, on right: 50 51
p (59)
    on left: 44, on right: 52
values (60)
    on left: 19 20 21 22 23, on right: 27 37 38 39 53
params (61)
    on left: 6 7 8, on right: 3 4 6
elseif (62)
    on left: 55 56, on right: 54 55
else (63)
    on left: 57 58, on right: 56
conditions (64)
    on left: 69 70 71, on right: 54 55 59 70 71
condition (65)
    on left: 60 61 62, on right: 60 62 69 70 71
conditional (66)
    on left: 63 64 65 66 67 68, on right: 60 62
array (67)
    on left: 35 36, on right: 21
func_params (68)
    on left: 32 33 34, on right: 23 32
index (69)
    on left: 39, on right: 22
arr_vals (70)
    on left: 37 38, on right: 35 37


State 0

    0 $accept: . start $end

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2

    $default  reduce using rule 2 (start)

    start      go to state 3
    func_decl  go to state 4
    var_type   go to state 5


State 1

   25 var_type: INTEGER .

    $default  reduce using rule 25 (var_type)


State 2

   26 var_type: ARRAY . var_type arr_len

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2

    var_type  go to state 6


State 3

    0 $accept: start . $end

    $end  shift, and go to state 7


State 4

    1 start: func_decl .

    $default  reduce using rule 1 (start)


State 5

    3 func_decl: var_type . FUNCTION variable '[' params ']' '{' statements '}'
    4          | var_type . FUNCTION variable '[' params ']' '{' statements '}' func_decl

    FUNCTION  shift, and go to state 8


State 6

   26 var_type: ARRAY var_type . arr_len

    VAR  shift, and go to state 9
    INT  shift, and go to state 10

    variable  go to state 11
    arr_len   go to state 12
    value     go to state 13


State 7

    0 $accept: start $end .

    $default  accept


State 8

    3 func_decl: var_type FUNCTION . variable '[' params ']' '{' statements '}'
    4          | var_type FUNCTION . variable '[' params ']' '{' statements '}' func_decl

    VAR  shift, and go to state 9

    variable  go to state 14


State 9

    5 variable: VAR .

    $default  reduce using rule 5 (variable)


State 10

   47 value: INT .

    $default  reduce using rule 47 (value)


State 11

   28 arr_len: variable .

    $default  reduce using rule 28 (arr_len)


State 12

   26 var_type: ARRAY var_type arr_len .

    $default  reduce using rule 26 (var_type)


State 13

   29 arr_len: value .

    $default  reduce using rule 29 (arr_len)


State 14

    3 func_decl: var_type FUNCTION variable . '[' params ']' '{' statements '}'
    4          | var_type FUNCTION variable . '[' params ']' '{' statements '}' func_decl

    '['  shift, and go to state 15


State 15

    3 func_decl: var_type FUNCTION variable '[' . params ']' '{' statements '}'
    4          | var_type FUNCTION variable '[' . params ']' '{' statements '}' func_decl

    VAR  shift, and go to state 9

    $default  reduce using rule 8 (params)

    variable  go to state 16
    params    go to state 17


State 16

    6 params: variable . ',' params
    7       | variable .

    ','  shift, and go to state 18

    $default  reduce using rule 7 (params)


State 17

    3 func_decl: var_type FUNCTION variable '[' params . ']' '{' statements '}'
    4          | var_type FUNCTION variable '[' params . ']' '{' statements '}' func_decl

    ']'  shift, and go to state 19


State 18

    6 params: variable ',' . params

    VAR  shift, and go to state 9

    $default  reduce using rule 8 (params)

    variable  go to state 16
    params    go to state 20


State 19

    3 func_decl: var_type FUNCTION variable '[' params ']' . '{' statements '}'
    4          | var_type FUNCTION variable '[' params ']' . '{' statements '}' func_decl

    '{'  shift, and go to state 21


State 20

    6 params: variable ',' params .

    $default  reduce using rule 6 (params)


State 21

    3 func_decl: var_type FUNCTION variable '[' params ']' '{' . statements '}'
    4          | var_type FUNCTION variable '[' params ']' '{' . statements '}' func_decl

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2
    IF       shift, and go to state 22
    WHILE    shift, and go to state 23
    READ     shift, and go to state 24
    WRITE    shift, and go to state 25
    RETURN   shift, and go to state 26
    VAR      shift, and go to state 9
    INT      shift, and go to state 10
    '{'      shift, and go to state 27

    $default  reduce using rule 11 (statements)

    variable    go to state 28
    func_decl   go to state 29
    statements  go to state 30
    statement   go to state 31
    var_decl    go to state 32
    cond        go to state 33
    loop        go to state 34
    io          go to state 35
    assignment  go to state 36
    return      go to state 37
    var_type    go to state 38
    value       go to state 39
    values      go to state 40
    array       go to state 41


State 22

   54 cond: IF . '[' conditions ']' '{' statements '}' elseif

    '['  shift, and go to state 42


State 23

   59 loop: WHILE . '[' conditions ']' '{' statements '}'

    '['  shift, and go to state 43


State 24

   40 io: READ . variable

    VAR  shift, and go to state 9

    variable  go to state 44


State 25

   41 io: WRITE . exp

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '('  shift, and go to state 45

    variable  go to state 28
    value     go to state 39
    exp       go to state 46
    mult      go to state 47
    factor    go to state 48
    p         go to state 49
    values    go to state 50
    array     go to state 41


State 26

   24 return: RETURN . exp

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '('  shift, and go to state 45

    variable  go to state 28
    value     go to state 39
    exp       go to state 51
    mult      go to state 47
    factor    go to state 48
    p         go to state 49
    values    go to state 50
    array     go to state 41


State 27

   35 array: '{' . arr_vals '}'
   36      | '{' . '}'

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '}'  shift, and go to state 52

    variable  go to state 28
    value     go to state 39
    values    go to state 53
    array     go to state 41
    arr_vals  go to state 54


State 28

   19 values: variable .
   22       | variable . '[' index
   23       | variable . '(' func_params

    '['  shift, and go to state 55
    '('  shift, and go to state 56

    $default  reduce using rule 19 (values)


State 29

   13 statement: func_decl .

    $default  reduce using rule 13 (statement)


State 30

    3 func_decl: var_type FUNCTION variable '[' params ']' '{' statements . '}'
    4          | var_type FUNCTION variable '[' params ']' '{' statements . '}' func_decl

    '}'  shift, and go to state 57


State 31

   10 statements: statement . statements

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2
    IF       shift, and go to state 22
    WHILE    shift, and go to state 23
    READ     shift, and go to state 24
    WRITE    shift, and go to state 25
    RETURN   shift, and go to state 26
    VAR      shift, and go to state 9
    INT      shift, and go to state 10
    '{'      shift, and go to state 27

    $default  reduce using rule 11 (statements)

    variable    go to state 28
    func_decl   go to state 29
    statements  go to state 58
    statement   go to state 31
    var_decl    go to state 32
    cond        go to state 33
    loop        go to state 34
    io          go to state 35
    assignment  go to state 36
    return      go to state 37
    var_type    go to state 38
    value       go to state 39
    values      go to state 40
    array       go to state 41


State 32

   12 statement: var_decl . ';'

    ';'  shift, and go to state 59


State 33

   14 statement: cond .

    $default  reduce using rule 14 (statement)


State 34

   15 statement: loop .

    $default  reduce using rule 15 (statement)


State 35

   16 statement: io . ';'

    ';'  shift, and go to state 60


State 36

   17 statement: assignment . ';'

    ';'  shift, and go to state 61


State 37

   18 statement: return . ';'

    ';'  shift, and go to state 62


State 38

    3 func_decl: var_type . FUNCTION variable '[' params ']' '{' statements '}'
    4          | var_type . FUNCTION variable '[' params ']' '{' statements '}' func_decl
    9 var_decl: var_type . assignment

    FUNCTION  shift, and go to state 8
    VAR       shift, and go to state 9
    INT       shift, and go to state 10
    '{'       shift, and go to state 27

    variable    go to state 28
    assignment  go to state 63
    value       go to state 39
    values      go to state 40
    array       go to state 41


State 39

   20 values: value .

    $default  reduce using rule 20 (values)


State 40

   27 assignment: values . set_val

    '='  shift, and go to state 64

    $default  reduce using rule 31 (set_val)

    set_val  go to state 65


State 41

   21 values: array .

    $default  reduce using rule 21 (values)


State 42

   54 cond: IF '[' . conditions ']' '{' statements '}' elseif

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '('  shift, and go to state 66

    variable    go to state 28
    value       go to state 39
    exp         go to state 67
    mult        go to state 47
    factor      go to state 48
    p           go to state 49
    values      go to state 50
    conditions  go to state 68
    condition   go to state 69
    array       go to state 41


State 43

   59 loop: WHILE '[' . conditions ']' '{' statements '}'

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '('  shift, and go to state 66

    variable    go to state 28
    value       go to state 39
    exp         go to state 67
    mult        go to state 47
    factor      go to state 48
    p           go to state 49
    values      go to state 50
    conditions  go to state 70
    condition   go to state 69
    array       go to state 41


State 44

   40 io: READ variable .

    $default  reduce using rule 40 (io)


State 45

   44 p: '(' . exp ')'

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '('  shift, and go to state 45

    variable  go to state 28
    value     go to state 39
    exp       go to state 71
    mult      go to state 47
    factor    go to state 48
    p         go to state 49
    values    go to state 50
    array     go to state 41


State 46

   41 io: WRITE exp .
   48 exp: exp . as mult

    '+'  shift, and go to state 72
    '-'  shift, and go to state 73

    $default  reduce using rule 41 (io)

    as  go to state 74


State 47

   49 exp: mult .
   50 mult: mult . md factor

    '*'  shift, and go to state 75
    '/'  shift, and go to state 76

    $default  reduce using rule 49 (exp)

    md  go to state 77


State 48

   51 mult: factor .

    $default  reduce using rule 51 (mult)


State 49

   52 factor: p .

    $default  reduce using rule 52 (factor)


State 50

   53 factor: values .

    $default  reduce using rule 53 (factor)


State 51

   24 return: RETURN exp .
   48 exp: exp . as mult

    '+'  shift, and go to state 72
    '-'  shift, and go to state 73

    $default  reduce using rule 24 (return)

    as  go to state 74


State 52

   36 array: '{' '}' .

    $default  reduce using rule 36 (array)


State 53

   37 arr_vals: values . ',' arr_vals
   38         | values .

    ','  shift, and go to state 78

    $default  reduce using rule 38 (arr_vals)


State 54

   35 array: '{' arr_vals . '}'

    '}'  shift, and go to state 79


State 55

   22 values: variable '[' . index

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27

    variable  go to state 28
    value     go to state 39
    values    go to state 80
    array     go to state 41
    index     go to state 81


State 56

   23 values: variable '(' . func_params

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '('  shift, and go to state 45
    ')'  shift, and go to state 82

    variable     go to state 28
    value        go to state 39
    exp          go to state 83
    mult         go to state 47
    factor       go to state 48
    p            go to state 49
    values       go to state 50
    array        go to state 41
    func_params  go to state 84


State 57

    3 func_decl: var_type FUNCTION variable '[' params ']' '{' statements '}' .
    4          | var_type FUNCTION variable '[' params ']' '{' statements '}' . func_decl

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2

    INTEGER   [reduce using rule 3 (func_decl)]
    ARRAY     [reduce using rule 3 (func_decl)]
    $default  reduce using rule 3 (func_decl)

    func_decl  go to state 85
    var_type   go to state 5


State 58

   10 statements: statement statements .

    $default  reduce using rule 10 (statements)


State 59

   12 statement: var_decl ';' .

    $default  reduce using rule 12 (statement)


State 60

   16 statement: io ';' .

    $default  reduce using rule 16 (statement)


State 61

   17 statement: assignment ';' .

    $default  reduce using rule 17 (statement)


State 62

   18 statement: return ';' .

    $default  reduce using rule 18 (statement)


State 63

    9 var_decl: var_type assignment .

    $default  reduce using rule 9 (var_decl)


State 64

   30 set_val: '=' . exp

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '('  shift, and go to state 45

    variable  go to state 28
    value     go to state 39
    exp       go to state 86
    mult      go to state 47
    factor    go to state 48
    p         go to state 49
    values    go to state 50
    array     go to state 41


State 65

   27 assignment: values set_val .

    $default  reduce using rule 27 (assignment)


State 66

   44 p: '(' . exp ')'
   62 condition: '(' . condition conditional exp ')'

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '('  shift, and go to state 66

    variable   go to state 28
    value      go to state 39
    exp        go to state 87
    mult       go to state 47
    factor     go to state 48
    p          go to state 49
    values     go to state 50
    condition  go to state 88
    array      go to state 41


State 67

   48 exp: exp . as mult
   61 condition: exp .

    '+'  shift, and go to state 72
    '-'  shift, and go to state 73

    $default  reduce using rule 61 (condition)

    as  go to state 74


State 68

   54 cond: IF '[' conditions . ']' '{' statements '}' elseif

    ']'  shift, and go to state 89


State 69

   60 condition: condition . conditional exp
   69 conditions: condition .
   70           | condition . AND conditions
   71           | condition . OR conditions

    GTE    shift, and go to state 90
    LTE    shift, and go to state 91
    ISEQ   shift, and go to state 92
    NOTEQ  shift, and go to state 93
    AND    shift, and go to state 94
    OR     shift, and go to state 95
    '>'    shift, and go to state 96
    '<'    shift, and go to state 97

    $default  reduce using rule 69 (conditions)

    conditional  go to state 98


State 70

   59 loop: WHILE '[' conditions . ']' '{' statements '}'

    ']'  shift, and go to state 99


State 71

   44 p: '(' exp . ')'
   48 exp: exp . as mult

    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    ')'  shift, and go to state 100

    as  go to state 74


State 72

   42 as: '+' .

    $default  reduce using rule 42 (as)


State 73

   43 as: '-' .

    $default  reduce using rule 43 (as)


State 74

   48 exp: exp as . mult

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '('  shift, and go to state 45

    variable  go to state 28
    value     go to state 39
    mult      go to state 101
    factor    go to state 48
    p         go to state 49
    values    go to state 50
    array     go to state 41


State 75

   45 md: '*' .

    $default  reduce using rule 45 (md)


State 76

   46 md: '/' .

    $default  reduce using rule 46 (md)


State 77

   50 mult: mult md . factor

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '('  shift, and go to state 45

    variable  go to state 28
    value     go to state 39
    factor    go to state 102
    p         go to state 49
    values    go to state 50
    array     go to state 41


State 78

   37 arr_vals: values ',' . arr_vals

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27

    variable  go to state 28
    value     go to state 39
    values    go to state 53
    array     go to state 41
    arr_vals  go to state 103


State 79

   35 array: '{' arr_vals '}' .

    $default  reduce using rule 35 (array)


State 80

   39 index: values . ']'

    ']'  shift, and go to state 104


State 81

   22 values: variable '[' index .

    $default  reduce using rule 22 (values)


State 82

   34 func_params: ')' .

    $default  reduce using rule 34 (func_params)


State 83

   32 func_params: exp . ',' func_params
   33            | exp . ')'
   48 exp: exp . as mult

    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    ','  shift, and go to state 105
    ')'  shift, and go to state 106

    as  go to state 74


State 84

   23 values: variable '(' func_params .

    $default  reduce using rule 23 (values)


State 85

    4 func_decl: var_type FUNCTION variable '[' params ']' '{' statements '}' func_decl .

    $default  reduce using rule 4 (func_decl)


State 86

   30 set_val: '=' exp .
   48 exp: exp . as mult

    '+'  shift, and go to state 72
    '-'  shift, and go to state 73

    $default  reduce using rule 30 (set_val)

    as  go to state 74


State 87

   44 p: '(' exp . ')'
   48 exp: exp . as mult
   61 condition: exp .

    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    ')'  shift, and go to state 100

    $default  reduce using rule 61 (condition)

    as  go to state 74


State 88

   60 condition: condition . conditional exp
   62          | '(' condition . conditional exp ')'

    GTE    shift, and go to state 90
    LTE    shift, and go to state 91
    ISEQ   shift, and go to state 92
    NOTEQ  shift, and go to state 93
    '>'    shift, and go to state 96
    '<'    shift, and go to state 97

    conditional  go to state 107


State 89

   54 cond: IF '[' conditions ']' . '{' statements '}' elseif

    '{'  shift, and go to state 108


State 90

   65 conditional: GTE .

    $default  reduce using rule 65 (conditional)


State 91

   66 conditional: LTE .

    $default  reduce using rule 66 (conditional)


State 92

   67 conditional: ISEQ .

    $default  reduce using rule 67 (conditional)


State 93

   68 conditional: NOTEQ .

    $default  reduce using rule 68 (conditional)


State 94

   70 conditions: condition AND . conditions

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '('  shift, and go to state 66

    variable    go to state 28
    value       go to state 39
    exp         go to state 67
    mult        go to state 47
    factor      go to state 48
    p           go to state 49
    values      go to state 50
    conditions  go to state 109
    condition   go to state 69
    array       go to state 41


State 95

   71 conditions: condition OR . conditions

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '('  shift, and go to state 66

    variable    go to state 28
    value       go to state 39
    exp         go to state 67
    mult        go to state 47
    factor      go to state 48
    p           go to state 49
    values      go to state 50
    conditions  go to state 110
    condition   go to state 69
    array       go to state 41


State 96

   63 conditional: '>' .

    $default  reduce using rule 63 (conditional)


State 97

   64 conditional: '<' .

    $default  reduce using rule 64 (conditional)


State 98

   60 condition: condition conditional . exp

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '('  shift, and go to state 45

    variable  go to state 28
    value     go to state 39
    exp       go to state 111
    mult      go to state 47
    factor    go to state 48
    p         go to state 49
    values    go to state 50
    array     go to state 41


State 99

   59 loop: WHILE '[' conditions ']' . '{' statements '}'

    '{'  shift, and go to state 112


State 100

   44 p: '(' exp ')' .

    $default  reduce using rule 44 (p)


State 101

   48 exp: exp as mult .
   50 mult: mult . md factor

    '*'  shift, and go to state 75
    '/'  shift, and go to state 76

    $default  reduce using rule 48 (exp)

    md  go to state 77


State 102

   50 mult: mult md factor .

    $default  reduce using rule 50 (mult)


State 103

   37 arr_vals: values ',' arr_vals .

    $default  reduce using rule 37 (arr_vals)


State 104

   39 index: values ']' .

    $default  reduce using rule 39 (index)


State 105

   32 func_params: exp ',' . func_params

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '('  shift, and go to state 45
    ')'  shift, and go to state 82

    variable     go to state 28
    value        go to state 39
    exp          go to state 83
    mult         go to state 47
    factor       go to state 48
    p            go to state 49
    values       go to state 50
    array        go to state 41
    func_params  go to state 113


State 106

   33 func_params: exp ')' .

    $default  reduce using rule 33 (func_params)


State 107

   60 condition: condition conditional . exp
   62          | '(' condition conditional . exp ')'

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '('  shift, and go to state 45

    variable  go to state 28
    value     go to state 39
    exp       go to state 114
    mult      go to state 47
    factor    go to state 48
    p         go to state 49
    values    go to state 50
    array     go to state 41


State 108

   54 cond: IF '[' conditions ']' '{' . statements '}' elseif

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2
    IF       shift, and go to state 22
    WHILE    shift, and go to state 23
    READ     shift, and go to state 24
    WRITE    shift, and go to state 25
    RETURN   shift, and go to state 26
    VAR      shift, and go to state 9
    INT      shift, and go to state 10
    '{'      shift, and go to state 27

    $default  reduce using rule 11 (statements)

    variable    go to state 28
    func_decl   go to state 29
    statements  go to state 115
    statement   go to state 31
    var_decl    go to state 32
    cond        go to state 33
    loop        go to state 34
    io          go to state 35
    assignment  go to state 36
    return      go to state 37
    var_type    go to state 38
    value       go to state 39
    values      go to state 40
    array       go to state 41


State 109

   70 conditions: condition AND conditions .

    $default  reduce using rule 70 (conditions)


State 110

   71 conditions: condition OR conditions .

    $default  reduce using rule 71 (conditions)


State 111

   48 exp: exp . as mult
   60 condition: condition conditional exp .

    '+'  shift, and go to state 72
    '-'  shift, and go to state 73

    $default  reduce using rule 60 (condition)

    as  go to state 74


State 112

   59 loop: WHILE '[' conditions ']' '{' . statements '}'

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2
    IF       shift, and go to state 22
    WHILE    shift, and go to state 23
    READ     shift, and go to state 24
    WRITE    shift, and go to state 25
    RETURN   shift, and go to state 26
    VAR      shift, and go to state 9
    INT      shift, and go to state 10
    '{'      shift, and go to state 27

    $default  reduce using rule 11 (statements)

    variable    go to state 28
    func_decl   go to state 29
    statements  go to state 116
    statement   go to state 31
    var_decl    go to state 32
    cond        go to state 33
    loop        go to state 34
    io          go to state 35
    assignment  go to state 36
    return      go to state 37
    var_type    go to state 38
    value       go to state 39
    values      go to state 40
    array       go to state 41


State 113

   32 func_params: exp ',' func_params .

    $default  reduce using rule 32 (func_params)


State 114

   48 exp: exp . as mult
   60 condition: condition conditional exp .
   62          | '(' condition conditional exp . ')'

    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    ')'  shift, and go to state 117

    $default  reduce using rule 60 (condition)

    as  go to state 74


State 115

   54 cond: IF '[' conditions ']' '{' statements . '}' elseif

    '}'  shift, and go to state 118


State 116

   59 loop: WHILE '[' conditions ']' '{' statements . '}'

    '}'  shift, and go to state 119


State 117

   62 condition: '(' condition conditional exp ')' .

    $default  reduce using rule 62 (condition)


State 118

   54 cond: IF '[' conditions ']' '{' statements '}' . elseif

    ELSE    shift, and go to state 120
    ELSEIF  shift, and go to state 121

    $default  reduce using rule 58 (else)

    elseif  go to state 122
    else    go to state 123


State 119

   59 loop: WHILE '[' conditions ']' '{' statements '}' .

    $default  reduce using rule 59 (loop)


State 120

   57 else: ELSE . '{' statements '}'

    '{'  shift, and go to state 124


State 121

   55 elseif: ELSEIF . '[' conditions ']' '{' statements '}' elseif

    '['  shift, and go to state 125


State 122

   54 cond: IF '[' conditions ']' '{' statements '}' elseif .

    $default  reduce using rule 54 (cond)


State 123

   56 elseif: else .

    $default  reduce using rule 56 (elseif)


State 124

   57 else: ELSE '{' . statements '}'

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2
    IF       shift, and go to state 22
    WHILE    shift, and go to state 23
    READ     shift, and go to state 24
    WRITE    shift, and go to state 25
    RETURN   shift, and go to state 26
    VAR      shift, and go to state 9
    INT      shift, and go to state 10
    '{'      shift, and go to state 27

    $default  reduce using rule 11 (statements)

    variable    go to state 28
    func_decl   go to state 29
    statements  go to state 126
    statement   go to state 31
    var_decl    go to state 32
    cond        go to state 33
    loop        go to state 34
    io          go to state 35
    assignment  go to state 36
    return      go to state 37
    var_type    go to state 38
    value       go to state 39
    values      go to state 40
    array       go to state 41


State 125

   55 elseif: ELSEIF '[' . conditions ']' '{' statements '}' elseif

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '('  shift, and go to state 66

    variable    go to state 28
    value       go to state 39
    exp         go to state 67
    mult        go to state 47
    factor      go to state 48
    p           go to state 49
    values      go to state 50
    conditions  go to state 127
    condition   go to state 69
    array       go to state 41


State 126

   57 else: ELSE '{' statements . '}'

    '}'  shift, and go to state 128


State 127

   55 elseif: ELSEIF '[' conditions . ']' '{' statements '}' elseif

    ']'  shift, and go to state 129


State 128

   57 else: ELSE '{' statements '}' .

    $default  reduce using rule 57 (else)


State 129

   55 elseif: ELSEIF '[' conditions ']' . '{' statements '}' elseif

    '{'  shift, and go to state 130


State 130

   55 elseif: ELSEIF '[' conditions ']' '{' . statements '}' elseif

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2
    IF       shift, and go to state 22
    WHILE    shift, and go to state 23
    READ     shift, and go to state 24
    WRITE    shift, and go to state 25
    RETURN   shift, and go to state 26
    VAR      shift, and go to state 9
    INT      shift, and go to state 10
    '{'      shift, and go to state 27

    $default  reduce using rule 11 (statements)

    variable    go to state 28
    func_decl   go to state 29
    statements  go to state 131
    statement   go to state 31
    var_decl    go to state 32
    cond        go to state 33
    loop        go to state 34
    io          go to state 35
    assignment  go to state 36
    return      go to state 37
    var_type    go to state 38
    value       go to state 39
    values      go to state 40
    array       go to state 41


State 131

   55 elseif: ELSEIF '[' conditions ']' '{' statements . '}' elseif

    '}'  shift, and go to state 132


State 132

   55 elseif: ELSEIF '[' conditions ']' '{' statements '}' . elseif

    ELSE    shift, and go to state 120
    ELSEIF  shift, and go to state 121

    $default  reduce using rule 58 (else)

    elseif  go to state 133
    else    go to state 123


State 133

   55 elseif: ELSEIF '[' conditions ']' '{' statements '}' elseif .

    $default  reduce using rule 55 (elseif)
