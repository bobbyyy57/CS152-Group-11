Terminals unused in grammar

   STRING
   MAIN


State 57 conflicts: 2 shift/reduce
State 63 conflicts: 1 reduce/reduce


Grammar

    0 $accept: start $end

    1 start: func_decl
    2      | %empty

    3 func_decl: var_type FUNCTION variable '[' params ']' '{' statements '}'
    4          | var_type FUNCTION variable '[' params ']' '{' statements '}' func_decl

    5 variable: VAR

    6 params: variable ',' params
    7       | variable
    8       | %empty

    9 var_decl: var_type assignment
   10         | var_type variable

   11 assignment: values set_val

   12 set_val: '=' exp
   13        | %empty

   14 as: '+'
   15   | '-'

   16 p: '(' exp ')'

   17 md: '*'
   18   | '/'

   19 value: INT

   20 exp: exp as mult
   21    | mult

   22 mult: mult md factor
   23     | factor

   24 factor: p
   25       | values

   26 values: variable
   27       | value
   28       | array
   29       | variable '[' index
   30       | variable '(' func_params

   31 statements: statement statements
   32           | %empty

   33 statement: var_decl ';'
   34          | func_decl
   35          | cond
   36          | loop
   37          | io ';'
   38          | assignment ';'
   39          | return ';'

   40 return: RETURN exp

   41 var_type: INTEGER
   42         | ARRAY var_type arr_len

   43 arr_len: variable
   44        | value

   45 func_params: exp ',' func_params
   46            | exp ')'
   47            | ')'

   48 array: '{' arr_vals '}'
   49      | '{' '}'

   50 arr_vals: values ',' arr_vals
   51         | values

   52 index: values ']'

   53 io: READ variable
   54   | WRITE exp

   55 cond: IF '[' conditions ']' '{' statements '}' elseif

   56 elseif: ELSEIF '[' conditions ']' '{' statements '}' elseif
   57       | else

   58 else: ELSE '{' statements '}'
   59     | %empty

   60 loop: WHILE '[' conditions ']' '{' statements '}'

   61 condition: condition conditional exp
   62          | exp
   63          | '(' condition conditional exp ')'

   64 conditional: '>'
   65            | '<'
   66            | GTE
   67            | LTE
   68            | ISEQ
   69            | NOTEQ

   70 conditions: condition
   71           | condition AND conditions
   72           | condition OR conditions


Terminals, with rules where they appear

$end (0) 0
'(' (40) 16 30 63
')' (41) 16 46 47 63
'*' (42) 17
'+' (43) 14
',' (44) 6 45 50
'-' (45) 15
'/' (47) 18
';' (59) 33 37 38 39
'<' (60) 65
'=' (61) 12
'>' (62) 64
'[' (91) 3 4 29 55 56 60
']' (93) 3 4 52 55 56 60
'{' (123) 3 4 48 49 55 56 58 60
'}' (125) 3 4 48 49 55 56 58 60
error (256)
INTEGER (258) 41
STRING (259)
ARRAY (260) 42
FUNCTION (261) 3 4
IF (262) 55
ELSE (263) 58
WHILE (264) 60
READ (265) 53
WRITE (266) 54
ELSEIF (267) 56
GTE (268) 66
LTE (269) 67
ISEQ (270) 68
NOTEQ (271) 69
AND (272) 71
OR (273) 72
RETURN (274) 40
VAR (275) 5
MAIN (276)
INT (277) 19


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
variable (39)
    on left: 5, on right: 3 4 6 7 10 26 29 30 43 53
start (40)
    on left: 1 2, on right: 0
func_decl (41)
    on left: 3 4, on right: 1 4 34
statements (42)
    on left: 31 32, on right: 3 4 31 55 56 58 60
statement (43)
    on left: 33 34 35 36 37 38 39, on right: 31
var_decl (44)
    on left: 9 10, on right: 33
cond (45)
    on left: 55, on right: 35
loop (46)
    on left: 60, on right: 36
io (47)
    on left: 53 54, on right: 37
assignment (48)
    on left: 11, on right: 9 38
return (49)
    on left: 40, on right: 39
var_type (50)
    on left: 41 42, on right: 3 4 9 10 42
arr_len (51)
    on left: 43 44, on right: 42
value (52)
    on left: 19, on right: 27 44
set_val (53)
    on left: 12 13, on right: 11
exp (54)
    on left: 20 21, on right: 12 16 20 40 45 46 54 61 62 63
as (55)
    on left: 14 15, on right: 20
mult (56)
    on left: 22 23, on right: 20 21 22
md (57)
    on left: 17 18, on right: 22
factor (58)
    on left: 24 25, on right: 22 23
p (59)
    on left: 16, on right: 24
values (60)
    on left: 26 27 28 29 30, on right: 11 25 50 51 52
params (61)
    on left: 6 7 8, on right: 3 4 6
elseif (62)
    on left: 56 57, on right: 55 56
else (63)
    on left: 58 59, on right: 57
conditions (64)
    on left: 70 71 72, on right: 55 56 60 71 72
condition (65)
    on left: 61 62 63, on right: 61 63 70 71 72
conditional (66)
    on left: 64 65 66 67 68 69, on right: 61 63
array (67)
    on left: 48 49, on right: 28
func_params (68)
    on left: 45 46 47, on right: 30 45
index (69)
    on left: 52, on right: 29
arr_vals (70)
    on left: 50 51, on right: 48 50


State 0

    0 $accept: . start $end

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2

    $default  reduce using rule 2 (start)

    start      go to state 3
    func_decl  go to state 4
    var_type   go to state 5


State 1

   41 var_type: INTEGER .

    $default  reduce using rule 41 (var_type)


State 2

   42 var_type: ARRAY . var_type arr_len

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2

    var_type  go to state 6


State 3

    0 $accept: start . $end

    $end  shift, and go to state 7


State 4

    1 start: func_decl .

    $default  reduce using rule 1 (start)


State 5

    3 func_decl: var_type . FUNCTION variable '[' params ']' '{' statements '}'
    4          | var_type . FUNCTION variable '[' params ']' '{' statements '}' func_decl

    FUNCTION  shift, and go to state 8


State 6

   42 var_type: ARRAY var_type . arr_len

    VAR  shift, and go to state 9
    INT  shift, and go to state 10

    variable  go to state 11
    arr_len   go to state 12
    value     go to state 13


State 7

    0 $accept: start $end .

    $default  accept


State 8

    3 func_decl: var_type FUNCTION . variable '[' params ']' '{' statements '}'
    4          | var_type FUNCTION . variable '[' params ']' '{' statements '}' func_decl

    VAR  shift, and go to state 9

    variable  go to state 14


State 9

    5 variable: VAR .

    $default  reduce using rule 5 (variable)


State 10

   19 value: INT .

    $default  reduce using rule 19 (value)


State 11

   43 arr_len: variable .

    $default  reduce using rule 43 (arr_len)


State 12

   42 var_type: ARRAY var_type arr_len .

    $default  reduce using rule 42 (var_type)


State 13

   44 arr_len: value .

    $default  reduce using rule 44 (arr_len)


State 14

    3 func_decl: var_type FUNCTION variable . '[' params ']' '{' statements '}'
    4          | var_type FUNCTION variable . '[' params ']' '{' statements '}' func_decl

    '['  shift, and go to state 15


State 15

    3 func_decl: var_type FUNCTION variable '[' . params ']' '{' statements '}'
    4          | var_type FUNCTION variable '[' . params ']' '{' statements '}' func_decl

    VAR  shift, and go to state 9

    $default  reduce using rule 8 (params)

    variable  go to state 16
    params    go to state 17


State 16

    6 params: variable . ',' params
    7       | variable .

    ','  shift, and go to state 18

    $default  reduce using rule 7 (params)


State 17

    3 func_decl: var_type FUNCTION variable '[' params . ']' '{' statements '}'
    4          | var_type FUNCTION variable '[' params . ']' '{' statements '}' func_decl

    ']'  shift, and go to state 19


State 18

    6 params: variable ',' . params

    VAR  shift, and go to state 9

    $default  reduce using rule 8 (params)

    variable  go to state 16
    params    go to state 20


State 19

    3 func_decl: var_type FUNCTION variable '[' params ']' . '{' statements '}'
    4          | var_type FUNCTION variable '[' params ']' . '{' statements '}' func_decl

    '{'  shift, and go to state 21


State 20

    6 params: variable ',' params .

    $default  reduce using rule 6 (params)


State 21

    3 func_decl: var_type FUNCTION variable '[' params ']' '{' . statements '}'
    4          | var_type FUNCTION variable '[' params ']' '{' . statements '}' func_decl

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2
    IF       shift, and go to state 22
    WHILE    shift, and go to state 23
    READ     shift, and go to state 24
    WRITE    shift, and go to state 25
    RETURN   shift, and go to state 26
    VAR      shift, and go to state 9
    INT      shift, and go to state 10
    '{'      shift, and go to state 27

    $default  reduce using rule 32 (statements)

    variable    go to state 28
    func_decl   go to state 29
    statements  go to state 30
    statement   go to state 31
    var_decl    go to state 32
    cond        go to state 33
    loop        go to state 34
    io          go to state 35
    assignment  go to state 36
    return      go to state 37
    var_type    go to state 38
    value       go to state 39
    values      go to state 40
    array       go to state 41


State 22

   55 cond: IF . '[' conditions ']' '{' statements '}' elseif

    '['  shift, and go to state 42


State 23

   60 loop: WHILE . '[' conditions ']' '{' statements '}'

    '['  shift, and go to state 43


State 24

   53 io: READ . variable

    VAR  shift, and go to state 9

    variable  go to state 44


State 25

   54 io: WRITE . exp

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '('  shift, and go to state 45

    variable  go to state 28
    value     go to state 39
    exp       go to state 46
    mult      go to state 47
    factor    go to state 48
    p         go to state 49
    values    go to state 50
    array     go to state 41


State 26

   40 return: RETURN . exp

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '('  shift, and go to state 45

    variable  go to state 28
    value     go to state 39
    exp       go to state 51
    mult      go to state 47
    factor    go to state 48
    p         go to state 49
    values    go to state 50
    array     go to state 41


State 27

   48 array: '{' . arr_vals '}'
   49      | '{' . '}'

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '}'  shift, and go to state 52

    variable  go to state 28
    value     go to state 39
    values    go to state 53
    array     go to state 41
    arr_vals  go to state 54


State 28

   26 values: variable .
   29       | variable . '[' index
   30       | variable . '(' func_params

    '['  shift, and go to state 55
    '('  shift, and go to state 56

    $default  reduce using rule 26 (values)


State 29

   34 statement: func_decl .

    $default  reduce using rule 34 (statement)


State 30

    3 func_decl: var_type FUNCTION variable '[' params ']' '{' statements . '}'
    4          | var_type FUNCTION variable '[' params ']' '{' statements . '}' func_decl

    '}'  shift, and go to state 57


State 31

   31 statements: statement . statements

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2
    IF       shift, and go to state 22
    WHILE    shift, and go to state 23
    READ     shift, and go to state 24
    WRITE    shift, and go to state 25
    RETURN   shift, and go to state 26
    VAR      shift, and go to state 9
    INT      shift, and go to state 10
    '{'      shift, and go to state 27

    $default  reduce using rule 32 (statements)

    variable    go to state 28
    func_decl   go to state 29
    statements  go to state 58
    statement   go to state 31
    var_decl    go to state 32
    cond        go to state 33
    loop        go to state 34
    io          go to state 35
    assignment  go to state 36
    return      go to state 37
    var_type    go to state 38
    value       go to state 39
    values      go to state 40
    array       go to state 41


State 32

   33 statement: var_decl . ';'

    ';'  shift, and go to state 59


State 33

   35 statement: cond .

    $default  reduce using rule 35 (statement)


State 34

   36 statement: loop .

    $default  reduce using rule 36 (statement)


State 35

   37 statement: io . ';'

    ';'  shift, and go to state 60


State 36

   38 statement: assignment . ';'

    ';'  shift, and go to state 61


State 37

   39 statement: return . ';'

    ';'  shift, and go to state 62


State 38

    3 func_decl: var_type . FUNCTION variable '[' params ']' '{' statements '}'
    4          | var_type . FUNCTION variable '[' params ']' '{' statements '}' func_decl
    9 var_decl: var_type . assignment
   10         | var_type . variable

    FUNCTION  shift, and go to state 8
    VAR       shift, and go to state 9
    INT       shift, and go to state 10
    '{'       shift, and go to state 27

    variable    go to state 63
    assignment  go to state 64
    value       go to state 39
    values      go to state 40
    array       go to state 41


State 39

   27 values: value .

    $default  reduce using rule 27 (values)


State 40

   11 assignment: values . set_val

    '='  shift, and go to state 65

    $default  reduce using rule 13 (set_val)

    set_val  go to state 66


State 41

   28 values: array .

    $default  reduce using rule 28 (values)


State 42

   55 cond: IF '[' . conditions ']' '{' statements '}' elseif

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '('  shift, and go to state 67

    variable    go to state 28
    value       go to state 39
    exp         go to state 68
    mult        go to state 47
    factor      go to state 48
    p           go to state 49
    values      go to state 50
    conditions  go to state 69
    condition   go to state 70
    array       go to state 41


State 43

   60 loop: WHILE '[' . conditions ']' '{' statements '}'

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '('  shift, and go to state 67

    variable    go to state 28
    value       go to state 39
    exp         go to state 68
    mult        go to state 47
    factor      go to state 48
    p           go to state 49
    values      go to state 50
    conditions  go to state 71
    condition   go to state 70
    array       go to state 41


State 44

   53 io: READ variable .

    $default  reduce using rule 53 (io)


State 45

   16 p: '(' . exp ')'

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '('  shift, and go to state 45

    variable  go to state 28
    value     go to state 39
    exp       go to state 72
    mult      go to state 47
    factor    go to state 48
    p         go to state 49
    values    go to state 50
    array     go to state 41


State 46

   20 exp: exp . as mult
   54 io: WRITE exp .

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74

    $default  reduce using rule 54 (io)

    as  go to state 75


State 47

   21 exp: mult .
   22 mult: mult . md factor

    '*'  shift, and go to state 76
    '/'  shift, and go to state 77

    $default  reduce using rule 21 (exp)

    md  go to state 78


State 48

   23 mult: factor .

    $default  reduce using rule 23 (mult)


State 49

   24 factor: p .

    $default  reduce using rule 24 (factor)


State 50

   25 factor: values .

    $default  reduce using rule 25 (factor)


State 51

   20 exp: exp . as mult
   40 return: RETURN exp .

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74

    $default  reduce using rule 40 (return)

    as  go to state 75


State 52

   49 array: '{' '}' .

    $default  reduce using rule 49 (array)


State 53

   50 arr_vals: values . ',' arr_vals
   51         | values .

    ','  shift, and go to state 79

    $default  reduce using rule 51 (arr_vals)


State 54

   48 array: '{' arr_vals . '}'

    '}'  shift, and go to state 80


State 55

   29 values: variable '[' . index

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27

    variable  go to state 28
    value     go to state 39
    values    go to state 81
    array     go to state 41
    index     go to state 82


State 56

   30 values: variable '(' . func_params

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '('  shift, and go to state 45
    ')'  shift, and go to state 83

    variable     go to state 28
    value        go to state 39
    exp          go to state 84
    mult         go to state 47
    factor       go to state 48
    p            go to state 49
    values       go to state 50
    array        go to state 41
    func_params  go to state 85


State 57

    3 func_decl: var_type FUNCTION variable '[' params ']' '{' statements '}' .
    4          | var_type FUNCTION variable '[' params ']' '{' statements '}' . func_decl

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2

    INTEGER   [reduce using rule 3 (func_decl)]
    ARRAY     [reduce using rule 3 (func_decl)]
    $default  reduce using rule 3 (func_decl)

    func_decl  go to state 86
    var_type   go to state 5


State 58

   31 statements: statement statements .

    $default  reduce using rule 31 (statements)


State 59

   33 statement: var_decl ';' .

    $default  reduce using rule 33 (statement)


State 60

   37 statement: io ';' .

    $default  reduce using rule 37 (statement)


State 61

   38 statement: assignment ';' .

    $default  reduce using rule 38 (statement)


State 62

   39 statement: return ';' .

    $default  reduce using rule 39 (statement)


State 63

   10 var_decl: var_type variable .
   26 values: variable .
   29       | variable . '[' index
   30       | variable . '(' func_params

    '['  shift, and go to state 55
    '('  shift, and go to state 56

    '='       reduce using rule 26 (values)
    ';'       reduce using rule 10 (var_decl)
    ';'       [reduce using rule 26 (values)]
    $default  reduce using rule 10 (var_decl)


State 64

    9 var_decl: var_type assignment .

    $default  reduce using rule 9 (var_decl)


State 65

   12 set_val: '=' . exp

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '('  shift, and go to state 45

    variable  go to state 28
    value     go to state 39
    exp       go to state 87
    mult      go to state 47
    factor    go to state 48
    p         go to state 49
    values    go to state 50
    array     go to state 41


State 66

   11 assignment: values set_val .

    $default  reduce using rule 11 (assignment)


State 67

   16 p: '(' . exp ')'
   63 condition: '(' . condition conditional exp ')'

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '('  shift, and go to state 67

    variable   go to state 28
    value      go to state 39
    exp        go to state 88
    mult       go to state 47
    factor     go to state 48
    p          go to state 49
    values     go to state 50
    condition  go to state 89
    array      go to state 41


State 68

   20 exp: exp . as mult
   62 condition: exp .

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74

    $default  reduce using rule 62 (condition)

    as  go to state 75


State 69

   55 cond: IF '[' conditions . ']' '{' statements '}' elseif

    ']'  shift, and go to state 90


State 70

   61 condition: condition . conditional exp
   70 conditions: condition .
   71           | condition . AND conditions
   72           | condition . OR conditions

    GTE    shift, and go to state 91
    LTE    shift, and go to state 92
    ISEQ   shift, and go to state 93
    NOTEQ  shift, and go to state 94
    AND    shift, and go to state 95
    OR     shift, and go to state 96
    '>'    shift, and go to state 97
    '<'    shift, and go to state 98

    $default  reduce using rule 70 (conditions)

    conditional  go to state 99


State 71

   60 loop: WHILE '[' conditions . ']' '{' statements '}'

    ']'  shift, and go to state 100


State 72

   16 p: '(' exp . ')'
   20 exp: exp . as mult

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    ')'  shift, and go to state 101

    as  go to state 75


State 73

   14 as: '+' .

    $default  reduce using rule 14 (as)


State 74

   15 as: '-' .

    $default  reduce using rule 15 (as)


State 75

   20 exp: exp as . mult

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '('  shift, and go to state 45

    variable  go to state 28
    value     go to state 39
    mult      go to state 102
    factor    go to state 48
    p         go to state 49
    values    go to state 50
    array     go to state 41


State 76

   17 md: '*' .

    $default  reduce using rule 17 (md)


State 77

   18 md: '/' .

    $default  reduce using rule 18 (md)


State 78

   22 mult: mult md . factor

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '('  shift, and go to state 45

    variable  go to state 28
    value     go to state 39
    factor    go to state 103
    p         go to state 49
    values    go to state 50
    array     go to state 41


State 79

   50 arr_vals: values ',' . arr_vals

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27

    variable  go to state 28
    value     go to state 39
    values    go to state 53
    array     go to state 41
    arr_vals  go to state 104


State 80

   48 array: '{' arr_vals '}' .

    $default  reduce using rule 48 (array)


State 81

   52 index: values . ']'

    ']'  shift, and go to state 105


State 82

   29 values: variable '[' index .

    $default  reduce using rule 29 (values)


State 83

   47 func_params: ')' .

    $default  reduce using rule 47 (func_params)


State 84

   20 exp: exp . as mult
   45 func_params: exp . ',' func_params
   46            | exp . ')'

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    ','  shift, and go to state 106
    ')'  shift, and go to state 107

    as  go to state 75


State 85

   30 values: variable '(' func_params .

    $default  reduce using rule 30 (values)


State 86

    4 func_decl: var_type FUNCTION variable '[' params ']' '{' statements '}' func_decl .

    $default  reduce using rule 4 (func_decl)


State 87

   12 set_val: '=' exp .
   20 exp: exp . as mult

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74

    $default  reduce using rule 12 (set_val)

    as  go to state 75


State 88

   16 p: '(' exp . ')'
   20 exp: exp . as mult
   62 condition: exp .

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    ')'  shift, and go to state 101

    $default  reduce using rule 62 (condition)

    as  go to state 75


State 89

   61 condition: condition . conditional exp
   63          | '(' condition . conditional exp ')'

    GTE    shift, and go to state 91
    LTE    shift, and go to state 92
    ISEQ   shift, and go to state 93
    NOTEQ  shift, and go to state 94
    '>'    shift, and go to state 97
    '<'    shift, and go to state 98

    conditional  go to state 108


State 90

   55 cond: IF '[' conditions ']' . '{' statements '}' elseif

    '{'  shift, and go to state 109


State 91

   66 conditional: GTE .

    $default  reduce using rule 66 (conditional)


State 92

   67 conditional: LTE .

    $default  reduce using rule 67 (conditional)


State 93

   68 conditional: ISEQ .

    $default  reduce using rule 68 (conditional)


State 94

   69 conditional: NOTEQ .

    $default  reduce using rule 69 (conditional)


State 95

   71 conditions: condition AND . conditions

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '('  shift, and go to state 67

    variable    go to state 28
    value       go to state 39
    exp         go to state 68
    mult        go to state 47
    factor      go to state 48
    p           go to state 49
    values      go to state 50
    conditions  go to state 110
    condition   go to state 70
    array       go to state 41


State 96

   72 conditions: condition OR . conditions

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '('  shift, and go to state 67

    variable    go to state 28
    value       go to state 39
    exp         go to state 68
    mult        go to state 47
    factor      go to state 48
    p           go to state 49
    values      go to state 50
    conditions  go to state 111
    condition   go to state 70
    array       go to state 41


State 97

   64 conditional: '>' .

    $default  reduce using rule 64 (conditional)


State 98

   65 conditional: '<' .

    $default  reduce using rule 65 (conditional)


State 99

   61 condition: condition conditional . exp

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '('  shift, and go to state 45

    variable  go to state 28
    value     go to state 39
    exp       go to state 112
    mult      go to state 47
    factor    go to state 48
    p         go to state 49
    values    go to state 50
    array     go to state 41


State 100

   60 loop: WHILE '[' conditions ']' . '{' statements '}'

    '{'  shift, and go to state 113


State 101

   16 p: '(' exp ')' .

    $default  reduce using rule 16 (p)


State 102

   20 exp: exp as mult .
   22 mult: mult . md factor

    '*'  shift, and go to state 76
    '/'  shift, and go to state 77

    $default  reduce using rule 20 (exp)

    md  go to state 78


State 103

   22 mult: mult md factor .

    $default  reduce using rule 22 (mult)


State 104

   50 arr_vals: values ',' arr_vals .

    $default  reduce using rule 50 (arr_vals)


State 105

   52 index: values ']' .

    $default  reduce using rule 52 (index)


State 106

   45 func_params: exp ',' . func_params

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '('  shift, and go to state 45
    ')'  shift, and go to state 83

    variable     go to state 28
    value        go to state 39
    exp          go to state 84
    mult         go to state 47
    factor       go to state 48
    p            go to state 49
    values       go to state 50
    array        go to state 41
    func_params  go to state 114


State 107

   46 func_params: exp ')' .

    $default  reduce using rule 46 (func_params)


State 108

   61 condition: condition conditional . exp
   63          | '(' condition conditional . exp ')'

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '('  shift, and go to state 45

    variable  go to state 28
    value     go to state 39
    exp       go to state 115
    mult      go to state 47
    factor    go to state 48
    p         go to state 49
    values    go to state 50
    array     go to state 41


State 109

   55 cond: IF '[' conditions ']' '{' . statements '}' elseif

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2
    IF       shift, and go to state 22
    WHILE    shift, and go to state 23
    READ     shift, and go to state 24
    WRITE    shift, and go to state 25
    RETURN   shift, and go to state 26
    VAR      shift, and go to state 9
    INT      shift, and go to state 10
    '{'      shift, and go to state 27

    $default  reduce using rule 32 (statements)

    variable    go to state 28
    func_decl   go to state 29
    statements  go to state 116
    statement   go to state 31
    var_decl    go to state 32
    cond        go to state 33
    loop        go to state 34
    io          go to state 35
    assignment  go to state 36
    return      go to state 37
    var_type    go to state 38
    value       go to state 39
    values      go to state 40
    array       go to state 41


State 110

   71 conditions: condition AND conditions .

    $default  reduce using rule 71 (conditions)


State 111

   72 conditions: condition OR conditions .

    $default  reduce using rule 72 (conditions)


State 112

   20 exp: exp . as mult
   61 condition: condition conditional exp .

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74

    $default  reduce using rule 61 (condition)

    as  go to state 75


State 113

   60 loop: WHILE '[' conditions ']' '{' . statements '}'

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2
    IF       shift, and go to state 22
    WHILE    shift, and go to state 23
    READ     shift, and go to state 24
    WRITE    shift, and go to state 25
    RETURN   shift, and go to state 26
    VAR      shift, and go to state 9
    INT      shift, and go to state 10
    '{'      shift, and go to state 27

    $default  reduce using rule 32 (statements)

    variable    go to state 28
    func_decl   go to state 29
    statements  go to state 117
    statement   go to state 31
    var_decl    go to state 32
    cond        go to state 33
    loop        go to state 34
    io          go to state 35
    assignment  go to state 36
    return      go to state 37
    var_type    go to state 38
    value       go to state 39
    values      go to state 40
    array       go to state 41


State 114

   45 func_params: exp ',' func_params .

    $default  reduce using rule 45 (func_params)


State 115

   20 exp: exp . as mult
   61 condition: condition conditional exp .
   63          | '(' condition conditional exp . ')'

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    ')'  shift, and go to state 118

    $default  reduce using rule 61 (condition)

    as  go to state 75


State 116

   55 cond: IF '[' conditions ']' '{' statements . '}' elseif

    '}'  shift, and go to state 119


State 117

   60 loop: WHILE '[' conditions ']' '{' statements . '}'

    '}'  shift, and go to state 120


State 118

   63 condition: '(' condition conditional exp ')' .

    $default  reduce using rule 63 (condition)


State 119

   55 cond: IF '[' conditions ']' '{' statements '}' . elseif

    ELSE    shift, and go to state 121
    ELSEIF  shift, and go to state 122

    $default  reduce using rule 59 (else)

    elseif  go to state 123
    else    go to state 124


State 120

   60 loop: WHILE '[' conditions ']' '{' statements '}' .

    $default  reduce using rule 60 (loop)


State 121

   58 else: ELSE . '{' statements '}'

    '{'  shift, and go to state 125


State 122

   56 elseif: ELSEIF . '[' conditions ']' '{' statements '}' elseif

    '['  shift, and go to state 126


State 123

   55 cond: IF '[' conditions ']' '{' statements '}' elseif .

    $default  reduce using rule 55 (cond)


State 124

   57 elseif: else .

    $default  reduce using rule 57 (elseif)


State 125

   58 else: ELSE '{' . statements '}'

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2
    IF       shift, and go to state 22
    WHILE    shift, and go to state 23
    READ     shift, and go to state 24
    WRITE    shift, and go to state 25
    RETURN   shift, and go to state 26
    VAR      shift, and go to state 9
    INT      shift, and go to state 10
    '{'      shift, and go to state 27

    $default  reduce using rule 32 (statements)

    variable    go to state 28
    func_decl   go to state 29
    statements  go to state 127
    statement   go to state 31
    var_decl    go to state 32
    cond        go to state 33
    loop        go to state 34
    io          go to state 35
    assignment  go to state 36
    return      go to state 37
    var_type    go to state 38
    value       go to state 39
    values      go to state 40
    array       go to state 41


State 126

   56 elseif: ELSEIF '[' . conditions ']' '{' statements '}' elseif

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 27
    '('  shift, and go to state 67

    variable    go to state 28
    value       go to state 39
    exp         go to state 68
    mult        go to state 47
    factor      go to state 48
    p           go to state 49
    values      go to state 50
    conditions  go to state 128
    condition   go to state 70
    array       go to state 41


State 127

   58 else: ELSE '{' statements . '}'

    '}'  shift, and go to state 129


State 128

   56 elseif: ELSEIF '[' conditions . ']' '{' statements '}' elseif

    ']'  shift, and go to state 130


State 129

   58 else: ELSE '{' statements '}' .

    $default  reduce using rule 58 (else)


State 130

   56 elseif: ELSEIF '[' conditions ']' . '{' statements '}' elseif

    '{'  shift, and go to state 131


State 131

   56 elseif: ELSEIF '[' conditions ']' '{' . statements '}' elseif

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2
    IF       shift, and go to state 22
    WHILE    shift, and go to state 23
    READ     shift, and go to state 24
    WRITE    shift, and go to state 25
    RETURN   shift, and go to state 26
    VAR      shift, and go to state 9
    INT      shift, and go to state 10
    '{'      shift, and go to state 27

    $default  reduce using rule 32 (statements)

    variable    go to state 28
    func_decl   go to state 29
    statements  go to state 132
    statement   go to state 31
    var_decl    go to state 32
    cond        go to state 33
    loop        go to state 34
    io          go to state 35
    assignment  go to state 36
    return      go to state 37
    var_type    go to state 38
    value       go to state 39
    values      go to state 40
    array       go to state 41


State 132

   56 elseif: ELSEIF '[' conditions ']' '{' statements . '}' elseif

    '}'  shift, and go to state 133


State 133

   56 elseif: ELSEIF '[' conditions ']' '{' statements '}' . elseif

    ELSE    shift, and go to state 121
    ELSEIF  shift, and go to state 122

    $default  reduce using rule 59 (else)

    elseif  go to state 134
    else    go to state 124


State 134

   56 elseif: ELSEIF '[' conditions ']' '{' statements '}' elseif .

    $default  reduce using rule 56 (elseif)
