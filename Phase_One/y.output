Terminals unused in grammar

   STRING


State 69 conflicts: 2 shift/reduce


Grammar

    0 $accept: start $end

    1 statements: statement statements
    2           | %empty

    3 statement: var_decl ';'
    4          | func_decl
    5          | cond
    6          | loop
    7          | io ';'
    8          | assignment ';'
    9          | return ';'

   10 values: variable
   11       | value
   12       | array
   13       | variable '[' index
   14       | variable '(' func_params

   15 start: func_decl
   16      | %empty

   17 params: var_decl ',' params
   18       | var_decl
   19       | %empty

   20 func_decl: var_type FUNCTION variable '[' params ']' '{' statements '}'
   21          | var_type FUNCTION variable '[' params ']' '{' statements '}' func_decl

   22 return: RETURN exp

   23 var_decl: var_type assignment

   24 var_type: INTEGER
   25         | ARRAY var_type arr_len

   26 assignment: values set_val

   27 arr_len: variable
   28        | value

   29 set_val: '=' exp
   30        | %empty

   31 func_params: exp ',' func_params
   32            | exp ')'
   33            | ')'

   34 array: '{' arr_vals '}'
   35      | '{' '}'

   36 arr_vals: values ',' arr_vals
   37         | values

   38 index: values ']'

   39 io: READ variable
   40   | WRITE exp

   41 as: '+'
   42   | '-'

   43 p: '(' exp ')'

   44 md: '*'
   45   | '/'

   46 variable: VAR

   47 value: INT

   48 exp: exp as mult
   49    | mult

   50 mult: mult md factor
   51     | factor

   52 factor: p
   53       | values

   54 cond: IF '[' conditions ']' '{' statements '}' elseif

   55 elseif: ELSEIF '[' conditions ']' '{' statements '}' elseif
   56       | else

   57 else: ELSE '{' statements '}'
   58     | %empty

   59 loop: WHILE '[' conditions ']' '{' statements '}'

   60 condition: condition conditional exp
   61          | exp
   62          | '(' condition conditional exp ')'

   63 conditional: '>'
   64            | '<'
   65            | GTE
   66            | LTE
   67            | ISEQ
   68            | NOTEQ

   69 conditions: condition
   70           | condition AND conditions
   71           | condition OR conditions


Terminals, with rules where they appear

$end (0) 0
'(' (40) 14 43 62
')' (41) 32 33 43 62
'*' (42) 44
'+' (43) 41
',' (44) 17 31 36
'-' (45) 42
'/' (47) 45
';' (59) 3 7 8 9
'<' (60) 64
'=' (61) 29
'>' (62) 63
'[' (91) 13 20 21 54 55 59
']' (93) 20 21 38 54 55 59
'{' (123) 20 21 34 35 54 55 57 59
'}' (125) 20 21 34 35 54 55 57 59
error (256)
INTEGER (258) 24
STRING (259)
ARRAY (260) 25
FUNCTION (261) 20 21
IF (262) 54
ELSE (263) 57
WHILE (264) 59
READ (265) 39
WRITE (266) 40
ELSEIF (267) 55
GTE (268) 65
LTE (269) 66
ISEQ (270) 67
NOTEQ (271) 68
AND (272) 70
OR (273) 71
RETURN (274) 22
INT (275) 47
VAR (276) 46


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
statements (38)
    on left: 1 2, on right: 1 20 21 54 55 57 59
statement (39)
    on left: 3 4 5 6 7 8 9, on right: 1
values (40)
    on left: 10 11 12 13 14, on right: 26 36 37 38 53
start (41)
    on left: 15 16, on right: 0
params (42)
    on left: 17 18 19, on right: 17 20 21
func_decl (43)
    on left: 20 21, on right: 4 15 21
return (44)
    on left: 22, on right: 9
var_decl (45)
    on left: 23, on right: 3 17 18
var_type (46)
    on left: 24 25, on right: 20 21 23 25
assignment (47)
    on left: 26, on right: 8 23
arr_len (48)
    on left: 27 28, on right: 25
set_val (49)
    on left: 29 30, on right: 26
func_params (50)
    on left: 31 32 33, on right: 14 31
array (51)
    on left: 34 35, on right: 12
arr_vals (52)
    on left: 36 37, on right: 34 36
index (53)
    on left: 38, on right: 13
io (54)
    on left: 39 40, on right: 7
as (55)
    on left: 41 42, on right: 48
p (56)
    on left: 43, on right: 52
md (57)
    on left: 44 45, on right: 50
variable (58)
    on left: 46, on right: 10 13 14 20 21 27 39
value (59)
    on left: 47, on right: 11 28
exp (60)
    on left: 48 49, on right: 22 29 31 32 40 43 48 60 61 62
mult (61)
    on left: 50 51, on right: 48 49 50
factor (62)
    on left: 52 53, on right: 50 51
cond (63)
    on left: 54, on right: 5
elseif (64)
    on left: 55 56, on right: 54 55
else (65)
    on left: 57 58, on right: 56
loop (66)
    on left: 59, on right: 6
condition (67)
    on left: 60 61 62, on right: 60 62 69 70 71
conditional (68)
    on left: 63 64 65 66 67 68, on right: 60 62
conditions (69)
    on left: 69 70 71, on right: 54 55 59 70 71


State 0

    0 $accept: . start $end

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2

    $default  reduce using rule 16 (start)

    start      go to state 3
    func_decl  go to state 4
    var_type   go to state 5


State 1

   24 var_type: INTEGER .

    $default  reduce using rule 24 (var_type)


State 2

   25 var_type: ARRAY . var_type arr_len

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2

    var_type  go to state 6


State 3

    0 $accept: start . $end

    $end  shift, and go to state 7


State 4

   15 start: func_decl .

    $default  reduce using rule 15 (start)


State 5

   20 func_decl: var_type . FUNCTION variable '[' params ']' '{' statements '}'
   21          | var_type . FUNCTION variable '[' params ']' '{' statements '}' func_decl

    FUNCTION  shift, and go to state 8


State 6

   25 var_type: ARRAY var_type . arr_len

    INT  shift, and go to state 9
    VAR  shift, and go to state 10

    arr_len   go to state 11
    variable  go to state 12
    value     go to state 13


State 7

    0 $accept: start $end .

    $default  accept


State 8

   20 func_decl: var_type FUNCTION . variable '[' params ']' '{' statements '}'
   21          | var_type FUNCTION . variable '[' params ']' '{' statements '}' func_decl

    VAR  shift, and go to state 10

    variable  go to state 14


State 9

   47 value: INT .

    $default  reduce using rule 47 (value)


State 10

   46 variable: VAR .

    $default  reduce using rule 46 (variable)


State 11

   25 var_type: ARRAY var_type arr_len .

    $default  reduce using rule 25 (var_type)


State 12

   27 arr_len: variable .

    $default  reduce using rule 27 (arr_len)


State 13

   28 arr_len: value .

    $default  reduce using rule 28 (arr_len)


State 14

   20 func_decl: var_type FUNCTION variable . '[' params ']' '{' statements '}'
   21          | var_type FUNCTION variable . '[' params ']' '{' statements '}' func_decl

    '['  shift, and go to state 15


State 15

   20 func_decl: var_type FUNCTION variable '[' . params ']' '{' statements '}'
   21          | var_type FUNCTION variable '[' . params ']' '{' statements '}' func_decl

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2

    $default  reduce using rule 19 (params)

    params    go to state 16
    var_decl  go to state 17
    var_type  go to state 18


State 16

   20 func_decl: var_type FUNCTION variable '[' params . ']' '{' statements '}'
   21          | var_type FUNCTION variable '[' params . ']' '{' statements '}' func_decl

    ']'  shift, and go to state 19


State 17

   17 params: var_decl . ',' params
   18       | var_decl .

    ','  shift, and go to state 20

    $default  reduce using rule 18 (params)


State 18

   23 var_decl: var_type . assignment

    INT  shift, and go to state 9
    VAR  shift, and go to state 10
    '{'  shift, and go to state 21

    values      go to state 22
    assignment  go to state 23
    array       go to state 24
    variable    go to state 25
    value       go to state 26


State 19

   20 func_decl: var_type FUNCTION variable '[' params ']' . '{' statements '}'
   21          | var_type FUNCTION variable '[' params ']' . '{' statements '}' func_decl

    '{'  shift, and go to state 27


State 20

   17 params: var_decl ',' . params

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2

    $default  reduce using rule 19 (params)

    params    go to state 28
    var_decl  go to state 17
    var_type  go to state 18


State 21

   34 array: '{' . arr_vals '}'
   35      | '{' . '}'

    INT  shift, and go to state 9
    VAR  shift, and go to state 10
    '{'  shift, and go to state 21
    '}'  shift, and go to state 29

    values    go to state 30
    array     go to state 24
    arr_vals  go to state 31
    variable  go to state 25
    value     go to state 26


State 22

   26 assignment: values . set_val

    '='  shift, and go to state 32

    $default  reduce using rule 30 (set_val)

    set_val  go to state 33


State 23

   23 var_decl: var_type assignment .

    $default  reduce using rule 23 (var_decl)


State 24

   12 values: array .

    $default  reduce using rule 12 (values)


State 25

   10 values: variable .
   13       | variable . '[' index
   14       | variable . '(' func_params

    '['  shift, and go to state 34
    '('  shift, and go to state 35

    $default  reduce using rule 10 (values)


State 26

   11 values: value .

    $default  reduce using rule 11 (values)


State 27

   20 func_decl: var_type FUNCTION variable '[' params ']' '{' . statements '}'
   21          | var_type FUNCTION variable '[' params ']' '{' . statements '}' func_decl

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2
    IF       shift, and go to state 36
    WHILE    shift, and go to state 37
    READ     shift, and go to state 38
    WRITE    shift, and go to state 39
    RETURN   shift, and go to state 40
    INT      shift, and go to state 9
    VAR      shift, and go to state 10
    '{'      shift, and go to state 21

    $default  reduce using rule 2 (statements)

    statements  go to state 41
    statement   go to state 42
    values      go to state 22
    func_decl   go to state 43
    return      go to state 44
    var_decl    go to state 45
    var_type    go to state 46
    assignment  go to state 47
    array       go to state 24
    io          go to state 48
    variable    go to state 25
    value       go to state 26
    cond        go to state 49
    loop        go to state 50


State 28

   17 params: var_decl ',' params .

    $default  reduce using rule 17 (params)


State 29

   35 array: '{' '}' .

    $default  reduce using rule 35 (array)


State 30

   36 arr_vals: values . ',' arr_vals
   37         | values .

    ','  shift, and go to state 51

    $default  reduce using rule 37 (arr_vals)


State 31

   34 array: '{' arr_vals . '}'

    '}'  shift, and go to state 52


State 32

   29 set_val: '=' . exp

    INT  shift, and go to state 9
    VAR  shift, and go to state 10
    '('  shift, and go to state 53
    '{'  shift, and go to state 21

    values    go to state 54
    array     go to state 24
    p         go to state 55
    variable  go to state 25
    value     go to state 26
    exp       go to state 56
    mult      go to state 57
    factor    go to state 58


State 33

   26 assignment: values set_val .

    $default  reduce using rule 26 (assignment)


State 34

   13 values: variable '[' . index

    INT  shift, and go to state 9
    VAR  shift, and go to state 10
    '{'  shift, and go to state 21

    values    go to state 59
    array     go to state 24
    index     go to state 60
    variable  go to state 25
    value     go to state 26


State 35

   14 values: variable '(' . func_params

    INT  shift, and go to state 9
    VAR  shift, and go to state 10
    '('  shift, and go to state 53
    '{'  shift, and go to state 21
    ')'  shift, and go to state 61

    values       go to state 54
    func_params  go to state 62
    array        go to state 24
    p            go to state 55
    variable     go to state 25
    value        go to state 26
    exp          go to state 63
    mult         go to state 57
    factor       go to state 58


State 36

   54 cond: IF . '[' conditions ']' '{' statements '}' elseif

    '['  shift, and go to state 64


State 37

   59 loop: WHILE . '[' conditions ']' '{' statements '}'

    '['  shift, and go to state 65


State 38

   39 io: READ . variable

    VAR  shift, and go to state 10

    variable  go to state 66


State 39

   40 io: WRITE . exp

    INT  shift, and go to state 9
    VAR  shift, and go to state 10
    '('  shift, and go to state 53
    '{'  shift, and go to state 21

    values    go to state 54
    array     go to state 24
    p         go to state 55
    variable  go to state 25
    value     go to state 26
    exp       go to state 67
    mult      go to state 57
    factor    go to state 58


State 40

   22 return: RETURN . exp

    INT  shift, and go to state 9
    VAR  shift, and go to state 10
    '('  shift, and go to state 53
    '{'  shift, and go to state 21

    values    go to state 54
    array     go to state 24
    p         go to state 55
    variable  go to state 25
    value     go to state 26
    exp       go to state 68
    mult      go to state 57
    factor    go to state 58


State 41

   20 func_decl: var_type FUNCTION variable '[' params ']' '{' statements . '}'
   21          | var_type FUNCTION variable '[' params ']' '{' statements . '}' func_decl

    '}'  shift, and go to state 69


State 42

    1 statements: statement . statements

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2
    IF       shift, and go to state 36
    WHILE    shift, and go to state 37
    READ     shift, and go to state 38
    WRITE    shift, and go to state 39
    RETURN   shift, and go to state 40
    INT      shift, and go to state 9
    VAR      shift, and go to state 10
    '{'      shift, and go to state 21

    $default  reduce using rule 2 (statements)

    statements  go to state 70
    statement   go to state 42
    values      go to state 22
    func_decl   go to state 43
    return      go to state 44
    var_decl    go to state 45
    var_type    go to state 46
    assignment  go to state 47
    array       go to state 24
    io          go to state 48
    variable    go to state 25
    value       go to state 26
    cond        go to state 49
    loop        go to state 50


State 43

    4 statement: func_decl .

    $default  reduce using rule 4 (statement)


State 44

    9 statement: return . ';'

    ';'  shift, and go to state 71


State 45

    3 statement: var_decl . ';'

    ';'  shift, and go to state 72


State 46

   20 func_decl: var_type . FUNCTION variable '[' params ']' '{' statements '}'
   21          | var_type . FUNCTION variable '[' params ']' '{' statements '}' func_decl
   23 var_decl: var_type . assignment

    FUNCTION  shift, and go to state 8
    INT       shift, and go to state 9
    VAR       shift, and go to state 10
    '{'       shift, and go to state 21

    values      go to state 22
    assignment  go to state 23
    array       go to state 24
    variable    go to state 25
    value       go to state 26


State 47

    8 statement: assignment . ';'

    ';'  shift, and go to state 73


State 48

    7 statement: io . ';'

    ';'  shift, and go to state 74


State 49

    5 statement: cond .

    $default  reduce using rule 5 (statement)


State 50

    6 statement: loop .

    $default  reduce using rule 6 (statement)


State 51

   36 arr_vals: values ',' . arr_vals

    INT  shift, and go to state 9
    VAR  shift, and go to state 10
    '{'  shift, and go to state 21

    values    go to state 30
    array     go to state 24
    arr_vals  go to state 75
    variable  go to state 25
    value     go to state 26


State 52

   34 array: '{' arr_vals '}' .

    $default  reduce using rule 34 (array)


State 53

   43 p: '(' . exp ')'

    INT  shift, and go to state 9
    VAR  shift, and go to state 10
    '('  shift, and go to state 53
    '{'  shift, and go to state 21

    values    go to state 54
    array     go to state 24
    p         go to state 55
    variable  go to state 25
    value     go to state 26
    exp       go to state 76
    mult      go to state 57
    factor    go to state 58


State 54

   53 factor: values .

    $default  reduce using rule 53 (factor)


State 55

   52 factor: p .

    $default  reduce using rule 52 (factor)


State 56

   29 set_val: '=' exp .
   48 exp: exp . as mult

    '+'  shift, and go to state 77
    '-'  shift, and go to state 78

    $default  reduce using rule 29 (set_val)

    as  go to state 79


State 57

   49 exp: mult .
   50 mult: mult . md factor

    '*'  shift, and go to state 80
    '/'  shift, and go to state 81

    $default  reduce using rule 49 (exp)

    md  go to state 82


State 58

   51 mult: factor .

    $default  reduce using rule 51 (mult)


State 59

   38 index: values . ']'

    ']'  shift, and go to state 83


State 60

   13 values: variable '[' index .

    $default  reduce using rule 13 (values)


State 61

   33 func_params: ')' .

    $default  reduce using rule 33 (func_params)


State 62

   14 values: variable '(' func_params .

    $default  reduce using rule 14 (values)


State 63

   31 func_params: exp . ',' func_params
   32            | exp . ')'
   48 exp: exp . as mult

    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    ','  shift, and go to state 84
    ')'  shift, and go to state 85

    as  go to state 79


State 64

   54 cond: IF '[' . conditions ']' '{' statements '}' elseif

    INT  shift, and go to state 9
    VAR  shift, and go to state 10
    '('  shift, and go to state 86
    '{'  shift, and go to state 21

    values      go to state 54
    array       go to state 24
    p           go to state 55
    variable    go to state 25
    value       go to state 26
    exp         go to state 87
    mult        go to state 57
    factor      go to state 58
    condition   go to state 88
    conditions  go to state 89


State 65

   59 loop: WHILE '[' . conditions ']' '{' statements '}'

    INT  shift, and go to state 9
    VAR  shift, and go to state 10
    '('  shift, and go to state 86
    '{'  shift, and go to state 21

    values      go to state 54
    array       go to state 24
    p           go to state 55
    variable    go to state 25
    value       go to state 26
    exp         go to state 87
    mult        go to state 57
    factor      go to state 58
    condition   go to state 88
    conditions  go to state 90


State 66

   39 io: READ variable .

    $default  reduce using rule 39 (io)


State 67

   40 io: WRITE exp .
   48 exp: exp . as mult

    '+'  shift, and go to state 77
    '-'  shift, and go to state 78

    $default  reduce using rule 40 (io)

    as  go to state 79


State 68

   22 return: RETURN exp .
   48 exp: exp . as mult

    '+'  shift, and go to state 77
    '-'  shift, and go to state 78

    $default  reduce using rule 22 (return)

    as  go to state 79


State 69

   20 func_decl: var_type FUNCTION variable '[' params ']' '{' statements '}' .
   21          | var_type FUNCTION variable '[' params ']' '{' statements '}' . func_decl

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2

    INTEGER   [reduce using rule 20 (func_decl)]
    ARRAY     [reduce using rule 20 (func_decl)]
    $default  reduce using rule 20 (func_decl)

    func_decl  go to state 91
    var_type   go to state 5


State 70

    1 statements: statement statements .

    $default  reduce using rule 1 (statements)


State 71

    9 statement: return ';' .

    $default  reduce using rule 9 (statement)


State 72

    3 statement: var_decl ';' .

    $default  reduce using rule 3 (statement)


State 73

    8 statement: assignment ';' .

    $default  reduce using rule 8 (statement)


State 74

    7 statement: io ';' .

    $default  reduce using rule 7 (statement)


State 75

   36 arr_vals: values ',' arr_vals .

    $default  reduce using rule 36 (arr_vals)


State 76

   43 p: '(' exp . ')'
   48 exp: exp . as mult

    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    ')'  shift, and go to state 92

    as  go to state 79


State 77

   41 as: '+' .

    $default  reduce using rule 41 (as)


State 78

   42 as: '-' .

    $default  reduce using rule 42 (as)


State 79

   48 exp: exp as . mult

    INT  shift, and go to state 9
    VAR  shift, and go to state 10
    '('  shift, and go to state 53
    '{'  shift, and go to state 21

    values    go to state 54
    array     go to state 24
    p         go to state 55
    variable  go to state 25
    value     go to state 26
    mult      go to state 93
    factor    go to state 58


State 80

   44 md: '*' .

    $default  reduce using rule 44 (md)


State 81

   45 md: '/' .

    $default  reduce using rule 45 (md)


State 82

   50 mult: mult md . factor

    INT  shift, and go to state 9
    VAR  shift, and go to state 10
    '('  shift, and go to state 53
    '{'  shift, and go to state 21

    values    go to state 54
    array     go to state 24
    p         go to state 55
    variable  go to state 25
    value     go to state 26
    factor    go to state 94


State 83

   38 index: values ']' .

    $default  reduce using rule 38 (index)


State 84

   31 func_params: exp ',' . func_params

    INT  shift, and go to state 9
    VAR  shift, and go to state 10
    '('  shift, and go to state 53
    '{'  shift, and go to state 21
    ')'  shift, and go to state 61

    values       go to state 54
    func_params  go to state 95
    array        go to state 24
    p            go to state 55
    variable     go to state 25
    value        go to state 26
    exp          go to state 63
    mult         go to state 57
    factor       go to state 58


State 85

   32 func_params: exp ')' .

    $default  reduce using rule 32 (func_params)


State 86

   43 p: '(' . exp ')'
   62 condition: '(' . condition conditional exp ')'

    INT  shift, and go to state 9
    VAR  shift, and go to state 10
    '('  shift, and go to state 86
    '{'  shift, and go to state 21

    values     go to state 54
    array      go to state 24
    p          go to state 55
    variable   go to state 25
    value      go to state 26
    exp        go to state 96
    mult       go to state 57
    factor     go to state 58
    condition  go to state 97


State 87

   48 exp: exp . as mult
   61 condition: exp .

    '+'  shift, and go to state 77
    '-'  shift, and go to state 78

    $default  reduce using rule 61 (condition)

    as  go to state 79


State 88

   60 condition: condition . conditional exp
   69 conditions: condition .
   70           | condition . AND conditions
   71           | condition . OR conditions

    GTE    shift, and go to state 98
    LTE    shift, and go to state 99
    ISEQ   shift, and go to state 100
    NOTEQ  shift, and go to state 101
    AND    shift, and go to state 102
    OR     shift, and go to state 103
    '>'    shift, and go to state 104
    '<'    shift, and go to state 105

    $default  reduce using rule 69 (conditions)

    conditional  go to state 106


State 89

   54 cond: IF '[' conditions . ']' '{' statements '}' elseif

    ']'  shift, and go to state 107


State 90

   59 loop: WHILE '[' conditions . ']' '{' statements '}'

    ']'  shift, and go to state 108


State 91

   21 func_decl: var_type FUNCTION variable '[' params ']' '{' statements '}' func_decl .

    $default  reduce using rule 21 (func_decl)


State 92

   43 p: '(' exp ')' .

    $default  reduce using rule 43 (p)


State 93

   48 exp: exp as mult .
   50 mult: mult . md factor

    '*'  shift, and go to state 80
    '/'  shift, and go to state 81

    $default  reduce using rule 48 (exp)

    md  go to state 82


State 94

   50 mult: mult md factor .

    $default  reduce using rule 50 (mult)


State 95

   31 func_params: exp ',' func_params .

    $default  reduce using rule 31 (func_params)


State 96

   43 p: '(' exp . ')'
   48 exp: exp . as mult
   61 condition: exp .

    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    ')'  shift, and go to state 92

    $default  reduce using rule 61 (condition)

    as  go to state 79


State 97

   60 condition: condition . conditional exp
   62          | '(' condition . conditional exp ')'

    GTE    shift, and go to state 98
    LTE    shift, and go to state 99
    ISEQ   shift, and go to state 100
    NOTEQ  shift, and go to state 101
    '>'    shift, and go to state 104
    '<'    shift, and go to state 105

    conditional  go to state 109


State 98

   65 conditional: GTE .

    $default  reduce using rule 65 (conditional)


State 99

   66 conditional: LTE .

    $default  reduce using rule 66 (conditional)


State 100

   67 conditional: ISEQ .

    $default  reduce using rule 67 (conditional)


State 101

   68 conditional: NOTEQ .

    $default  reduce using rule 68 (conditional)


State 102

   70 conditions: condition AND . conditions

    INT  shift, and go to state 9
    VAR  shift, and go to state 10
    '('  shift, and go to state 86
    '{'  shift, and go to state 21

    values      go to state 54
    array       go to state 24
    p           go to state 55
    variable    go to state 25
    value       go to state 26
    exp         go to state 87
    mult        go to state 57
    factor      go to state 58
    condition   go to state 88
    conditions  go to state 110


State 103

   71 conditions: condition OR . conditions

    INT  shift, and go to state 9
    VAR  shift, and go to state 10
    '('  shift, and go to state 86
    '{'  shift, and go to state 21

    values      go to state 54
    array       go to state 24
    p           go to state 55
    variable    go to state 25
    value       go to state 26
    exp         go to state 87
    mult        go to state 57
    factor      go to state 58
    condition   go to state 88
    conditions  go to state 111


State 104

   63 conditional: '>' .

    $default  reduce using rule 63 (conditional)


State 105

   64 conditional: '<' .

    $default  reduce using rule 64 (conditional)


State 106

   60 condition: condition conditional . exp

    INT  shift, and go to state 9
    VAR  shift, and go to state 10
    '('  shift, and go to state 53
    '{'  shift, and go to state 21

    values    go to state 54
    array     go to state 24
    p         go to state 55
    variable  go to state 25
    value     go to state 26
    exp       go to state 112
    mult      go to state 57
    factor    go to state 58


State 107

   54 cond: IF '[' conditions ']' . '{' statements '}' elseif

    '{'  shift, and go to state 113


State 108

   59 loop: WHILE '[' conditions ']' . '{' statements '}'

    '{'  shift, and go to state 114


State 109

   60 condition: condition conditional . exp
   62          | '(' condition conditional . exp ')'

    INT  shift, and go to state 9
    VAR  shift, and go to state 10
    '('  shift, and go to state 53
    '{'  shift, and go to state 21

    values    go to state 54
    array     go to state 24
    p         go to state 55
    variable  go to state 25
    value     go to state 26
    exp       go to state 115
    mult      go to state 57
    factor    go to state 58


State 110

   70 conditions: condition AND conditions .

    $default  reduce using rule 70 (conditions)


State 111

   71 conditions: condition OR conditions .

    $default  reduce using rule 71 (conditions)


State 112

   48 exp: exp . as mult
   60 condition: condition conditional exp .

    '+'  shift, and go to state 77
    '-'  shift, and go to state 78

    $default  reduce using rule 60 (condition)

    as  go to state 79


State 113

   54 cond: IF '[' conditions ']' '{' . statements '}' elseif

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2
    IF       shift, and go to state 36
    WHILE    shift, and go to state 37
    READ     shift, and go to state 38
    WRITE    shift, and go to state 39
    RETURN   shift, and go to state 40
    INT      shift, and go to state 9
    VAR      shift, and go to state 10
    '{'      shift, and go to state 21

    $default  reduce using rule 2 (statements)

    statements  go to state 116
    statement   go to state 42
    values      go to state 22
    func_decl   go to state 43
    return      go to state 44
    var_decl    go to state 45
    var_type    go to state 46
    assignment  go to state 47
    array       go to state 24
    io          go to state 48
    variable    go to state 25
    value       go to state 26
    cond        go to state 49
    loop        go to state 50


State 114

   59 loop: WHILE '[' conditions ']' '{' . statements '}'

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2
    IF       shift, and go to state 36
    WHILE    shift, and go to state 37
    READ     shift, and go to state 38
    WRITE    shift, and go to state 39
    RETURN   shift, and go to state 40
    INT      shift, and go to state 9
    VAR      shift, and go to state 10
    '{'      shift, and go to state 21

    $default  reduce using rule 2 (statements)

    statements  go to state 117
    statement   go to state 42
    values      go to state 22
    func_decl   go to state 43
    return      go to state 44
    var_decl    go to state 45
    var_type    go to state 46
    assignment  go to state 47
    array       go to state 24
    io          go to state 48
    variable    go to state 25
    value       go to state 26
    cond        go to state 49
    loop        go to state 50


State 115

   48 exp: exp . as mult
   60 condition: condition conditional exp .
   62          | '(' condition conditional exp . ')'

    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    ')'  shift, and go to state 118

    $default  reduce using rule 60 (condition)

    as  go to state 79


State 116

   54 cond: IF '[' conditions ']' '{' statements . '}' elseif

    '}'  shift, and go to state 119


State 117

   59 loop: WHILE '[' conditions ']' '{' statements . '}'

    '}'  shift, and go to state 120


State 118

   62 condition: '(' condition conditional exp ')' .

    $default  reduce using rule 62 (condition)


State 119

   54 cond: IF '[' conditions ']' '{' statements '}' . elseif

    ELSE    shift, and go to state 121
    ELSEIF  shift, and go to state 122

    $default  reduce using rule 58 (else)

    elseif  go to state 123
    else    go to state 124


State 120

   59 loop: WHILE '[' conditions ']' '{' statements '}' .

    $default  reduce using rule 59 (loop)


State 121

   57 else: ELSE . '{' statements '}'

    '{'  shift, and go to state 125


State 122

   55 elseif: ELSEIF . '[' conditions ']' '{' statements '}' elseif

    '['  shift, and go to state 126


State 123

   54 cond: IF '[' conditions ']' '{' statements '}' elseif .

    $default  reduce using rule 54 (cond)


State 124

   56 elseif: else .

    $default  reduce using rule 56 (elseif)


State 125

   57 else: ELSE '{' . statements '}'

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2
    IF       shift, and go to state 36
    WHILE    shift, and go to state 37
    READ     shift, and go to state 38
    WRITE    shift, and go to state 39
    RETURN   shift, and go to state 40
    INT      shift, and go to state 9
    VAR      shift, and go to state 10
    '{'      shift, and go to state 21

    $default  reduce using rule 2 (statements)

    statements  go to state 127
    statement   go to state 42
    values      go to state 22
    func_decl   go to state 43
    return      go to state 44
    var_decl    go to state 45
    var_type    go to state 46
    assignment  go to state 47
    array       go to state 24
    io          go to state 48
    variable    go to state 25
    value       go to state 26
    cond        go to state 49
    loop        go to state 50


State 126

   55 elseif: ELSEIF '[' . conditions ']' '{' statements '}' elseif

    INT  shift, and go to state 9
    VAR  shift, and go to state 10
    '('  shift, and go to state 86
    '{'  shift, and go to state 21

    values      go to state 54
    array       go to state 24
    p           go to state 55
    variable    go to state 25
    value       go to state 26
    exp         go to state 87
    mult        go to state 57
    factor      go to state 58
    condition   go to state 88
    conditions  go to state 128


State 127

   57 else: ELSE '{' statements . '}'

    '}'  shift, and go to state 129


State 128

   55 elseif: ELSEIF '[' conditions . ']' '{' statements '}' elseif

    ']'  shift, and go to state 130


State 129

   57 else: ELSE '{' statements '}' .

    $default  reduce using rule 57 (else)


State 130

   55 elseif: ELSEIF '[' conditions ']' . '{' statements '}' elseif

    '{'  shift, and go to state 131


State 131

   55 elseif: ELSEIF '[' conditions ']' '{' . statements '}' elseif

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2
    IF       shift, and go to state 36
    WHILE    shift, and go to state 37
    READ     shift, and go to state 38
    WRITE    shift, and go to state 39
    RETURN   shift, and go to state 40
    INT      shift, and go to state 9
    VAR      shift, and go to state 10
    '{'      shift, and go to state 21

    $default  reduce using rule 2 (statements)

    statements  go to state 132
    statement   go to state 42
    values      go to state 22
    func_decl   go to state 43
    return      go to state 44
    var_decl    go to state 45
    var_type    go to state 46
    assignment  go to state 47
    array       go to state 24
    io          go to state 48
    variable    go to state 25
    value       go to state 26
    cond        go to state 49
    loop        go to state 50


State 132

   55 elseif: ELSEIF '[' conditions ']' '{' statements . '}' elseif

    '}'  shift, and go to state 133


State 133

   55 elseif: ELSEIF '[' conditions ']' '{' statements '}' . elseif

    ELSE    shift, and go to state 121
    ELSEIF  shift, and go to state 122

    $default  reduce using rule 58 (else)

    elseif  go to state 134
    else    go to state 124


State 134

   55 elseif: ELSEIF '[' conditions ']' '{' statements '}' elseif .

    $default  reduce using rule 55 (elseif)
