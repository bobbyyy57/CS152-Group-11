Terminals unused in grammar

   STRING


State 80 conflicts: 2 shift/reduce


Grammar

    0 $accept: start $end

    1 start: func_decl
    2      | %empty

    3 statements: statement statements
    4           | %empty

    5 statement: var_decl ';'
    6          | func_decl
    7          | cond
    8          | loop
    9          | io ';'
   10          | assignment ';'
   11          | return ';'

   12 var_decl: var_type assignment

   13 values: variable
   14       | value
   15       | array
   16       | variable '[' index
   17       | variable '(' func_params

   18 params: var_decl ',' params
   19       | var_decl
   20       | %empty

   21 func_decl: var_type FUNCTION variable '[' params ']' '{' statements '}'
   22          | var_type FUNCTION variable '[' params ']' '{' statements '}' func_decl

   23 return: RETURN exp

   24 var_type: INTEGER
   25         | ARRAY var_type arr_len

   26 assignment: values set_val

   27 arr_len: variable
   28        | value

   29 set_val: '=' exp
   30        | %empty

   31 func_params: exp ',' func_params
   32            | exp ')'
   33            | ')'

   34 array: '{' arr_vals '}'
   35      | '{' '}'

   36 arr_vals: values ',' arr_vals
   37         | values

   38 index: values ']'

   39 io: READ variable
   40   | WRITE exp

   41 as: '+'
   42   | '-'

   43 p: '(' exp ')'

   44 md: '*'
   45   | '/'

   46 variable: VAR

   47 value: INT

   48 exp: exp as mult
   49    | mult

   50 mult: mult md factor
   51     | factor

   52 factor: p
   53       | values

   54 cond: IF '[' conditions ']' '{' statements '}' elseif

   55 elseif: ELSEIF '[' conditions ']' '{' statements '}' elseif
   56       | else

   57 else: ELSE '{' statements '}'
   58     | %empty

   59 loop: WHILE '[' conditions ']' '{' statements '}'

   60 condition: condition conditional exp
   61          | exp
   62          | '(' condition conditional exp ')'

   63 conditional: '>'
   64            | '<'
   65            | GTE
   66            | LTE
   67            | ISEQ
   68            | NOTEQ

   69 conditions: condition
   70           | condition AND conditions
   71           | condition OR conditions


Terminals, with rules where they appear

$end (0) 0
'(' (40) 17 43 62
')' (41) 32 33 43 62
'*' (42) 44
'+' (43) 41
',' (44) 18 31 36
'-' (45) 42
'/' (47) 45
';' (59) 5 9 10 11
'<' (60) 64
'=' (61) 29
'>' (62) 63
'[' (91) 16 21 22 54 55 59
']' (93) 21 22 38 54 55 59
'{' (123) 21 22 34 35 54 55 57 59
'}' (125) 21 22 34 35 54 55 57 59
error (256)
INTEGER (258) 24
STRING (259)
ARRAY (260) 25
FUNCTION (261) 21 22
IF (262) 54
ELSE (263) 57
WHILE (264) 59
READ (265) 39
WRITE (266) 40
ELSEIF (267) 55
GTE (268) 65
LTE (269) 66
ISEQ (270) 67
NOTEQ (271) 68
AND (272) 70
OR (273) 71
RETURN (274) 23
VAR (275) 46
INT (276) 47


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
variable (38)
    on left: 46, on right: 13 16 17 21 22 27 39
start (39)
    on left: 1 2, on right: 0
func_decl (40)
    on left: 21 22, on right: 1 6 22
statements (41)
    on left: 3 4, on right: 3 21 22 54 55 57 59
statement (42)
    on left: 5 6 7 8 9 10 11, on right: 3
var_decl (43)
    on left: 12, on right: 5 18 19
cond (44)
    on left: 54, on right: 7
loop (45)
    on left: 59, on right: 8
io (46)
    on left: 39 40, on right: 9
assignment (47)
    on left: 26, on right: 10 12
return (48)
    on left: 23, on right: 11
var_type (49)
    on left: 24 25, on right: 12 21 22 25
arr_len (50)
    on left: 27 28, on right: 25
value (51)
    on left: 47, on right: 14 28
set_val (52)
    on left: 29 30, on right: 26
exp (53)
    on left: 48 49, on right: 23 29 31 32 40 43 48 60 61 62
as (54)
    on left: 41 42, on right: 48
mult (55)
    on left: 50 51, on right: 48 49 50
md (56)
    on left: 44 45, on right: 50
factor (57)
    on left: 52 53, on right: 50 51
p (58)
    on left: 43, on right: 52
values (59)
    on left: 13 14 15 16 17, on right: 26 36 37 38 53
params (60)
    on left: 18 19 20, on right: 18 21 22
elseif (61)
    on left: 55 56, on right: 54 55
else (62)
    on left: 57 58, on right: 56
conditions (63)
    on left: 69 70 71, on right: 54 55 59 70 71
condition (64)
    on left: 60 61 62, on right: 60 62 69 70 71
conditional (65)
    on left: 63 64 65 66 67 68, on right: 60 62
array (66)
    on left: 34 35, on right: 15
func_params (67)
    on left: 31 32 33, on right: 17 31
index (68)
    on left: 38, on right: 16
arr_vals (69)
    on left: 36 37, on right: 34 36


State 0

    0 $accept: . start $end

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2

    $default  reduce using rule 2 (start)

    start      go to state 3
    func_decl  go to state 4
    var_type   go to state 5


State 1

   24 var_type: INTEGER .

    $default  reduce using rule 24 (var_type)


State 2

   25 var_type: ARRAY . var_type arr_len

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2

    var_type  go to state 6


State 3

    0 $accept: start . $end

    $end  shift, and go to state 7


State 4

    1 start: func_decl .

    $default  reduce using rule 1 (start)


State 5

   21 func_decl: var_type . FUNCTION variable '[' params ']' '{' statements '}'
   22          | var_type . FUNCTION variable '[' params ']' '{' statements '}' func_decl

    FUNCTION  shift, and go to state 8


State 6

   25 var_type: ARRAY var_type . arr_len

    VAR  shift, and go to state 9
    INT  shift, and go to state 10

    variable  go to state 11
    arr_len   go to state 12
    value     go to state 13


State 7

    0 $accept: start $end .

    $default  accept


State 8

   21 func_decl: var_type FUNCTION . variable '[' params ']' '{' statements '}'
   22          | var_type FUNCTION . variable '[' params ']' '{' statements '}' func_decl

    VAR  shift, and go to state 9

    variable  go to state 14


State 9

   46 variable: VAR .

    $default  reduce using rule 46 (variable)


State 10

   47 value: INT .

    $default  reduce using rule 47 (value)


State 11

   27 arr_len: variable .

    $default  reduce using rule 27 (arr_len)


State 12

   25 var_type: ARRAY var_type arr_len .

    $default  reduce using rule 25 (var_type)


State 13

   28 arr_len: value .

    $default  reduce using rule 28 (arr_len)


State 14

   21 func_decl: var_type FUNCTION variable . '[' params ']' '{' statements '}'
   22          | var_type FUNCTION variable . '[' params ']' '{' statements '}' func_decl

    '['  shift, and go to state 15


State 15

   21 func_decl: var_type FUNCTION variable '[' . params ']' '{' statements '}'
   22          | var_type FUNCTION variable '[' . params ']' '{' statements '}' func_decl

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2

    $default  reduce using rule 20 (params)

    var_decl  go to state 16
    var_type  go to state 17
    params    go to state 18


State 16

   18 params: var_decl . ',' params
   19       | var_decl .

    ','  shift, and go to state 19

    $default  reduce using rule 19 (params)


State 17

   12 var_decl: var_type . assignment

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 20

    variable    go to state 21
    assignment  go to state 22
    value       go to state 23
    values      go to state 24
    array       go to state 25


State 18

   21 func_decl: var_type FUNCTION variable '[' params . ']' '{' statements '}'
   22          | var_type FUNCTION variable '[' params . ']' '{' statements '}' func_decl

    ']'  shift, and go to state 26


State 19

   18 params: var_decl ',' . params

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2

    $default  reduce using rule 20 (params)

    var_decl  go to state 16
    var_type  go to state 17
    params    go to state 27


State 20

   34 array: '{' . arr_vals '}'
   35      | '{' . '}'

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 20
    '}'  shift, and go to state 28

    variable  go to state 21
    value     go to state 23
    values    go to state 29
    array     go to state 25
    arr_vals  go to state 30


State 21

   13 values: variable .
   16       | variable . '[' index
   17       | variable . '(' func_params

    '['  shift, and go to state 31
    '('  shift, and go to state 32

    $default  reduce using rule 13 (values)


State 22

   12 var_decl: var_type assignment .

    $default  reduce using rule 12 (var_decl)


State 23

   14 values: value .

    $default  reduce using rule 14 (values)


State 24

   26 assignment: values . set_val

    '='  shift, and go to state 33

    $default  reduce using rule 30 (set_val)

    set_val  go to state 34


State 25

   15 values: array .

    $default  reduce using rule 15 (values)


State 26

   21 func_decl: var_type FUNCTION variable '[' params ']' . '{' statements '}'
   22          | var_type FUNCTION variable '[' params ']' . '{' statements '}' func_decl

    '{'  shift, and go to state 35


State 27

   18 params: var_decl ',' params .

    $default  reduce using rule 18 (params)


State 28

   35 array: '{' '}' .

    $default  reduce using rule 35 (array)


State 29

   36 arr_vals: values . ',' arr_vals
   37         | values .

    ','  shift, and go to state 36

    $default  reduce using rule 37 (arr_vals)


State 30

   34 array: '{' arr_vals . '}'

    '}'  shift, and go to state 37


State 31

   16 values: variable '[' . index

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 20

    variable  go to state 21
    value     go to state 23
    values    go to state 38
    array     go to state 25
    index     go to state 39


State 32

   17 values: variable '(' . func_params

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '('  shift, and go to state 40
    '{'  shift, and go to state 20
    ')'  shift, and go to state 41

    variable     go to state 21
    value        go to state 23
    exp          go to state 42
    mult         go to state 43
    factor       go to state 44
    p            go to state 45
    values       go to state 46
    array        go to state 25
    func_params  go to state 47


State 33

   29 set_val: '=' . exp

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '('  shift, and go to state 40
    '{'  shift, and go to state 20

    variable  go to state 21
    value     go to state 23
    exp       go to state 48
    mult      go to state 43
    factor    go to state 44
    p         go to state 45
    values    go to state 46
    array     go to state 25


State 34

   26 assignment: values set_val .

    $default  reduce using rule 26 (assignment)


State 35

   21 func_decl: var_type FUNCTION variable '[' params ']' '{' . statements '}'
   22          | var_type FUNCTION variable '[' params ']' '{' . statements '}' func_decl

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2
    IF       shift, and go to state 49
    WHILE    shift, and go to state 50
    READ     shift, and go to state 51
    WRITE    shift, and go to state 52
    RETURN   shift, and go to state 53
    VAR      shift, and go to state 9
    INT      shift, and go to state 10
    '{'      shift, and go to state 20

    $default  reduce using rule 4 (statements)

    variable    go to state 21
    func_decl   go to state 54
    statements  go to state 55
    statement   go to state 56
    var_decl    go to state 57
    cond        go to state 58
    loop        go to state 59
    io          go to state 60
    assignment  go to state 61
    return      go to state 62
    var_type    go to state 63
    value       go to state 23
    values      go to state 24
    array       go to state 25


State 36

   36 arr_vals: values ',' . arr_vals

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '{'  shift, and go to state 20

    variable  go to state 21
    value     go to state 23
    values    go to state 29
    array     go to state 25
    arr_vals  go to state 64


State 37

   34 array: '{' arr_vals '}' .

    $default  reduce using rule 34 (array)


State 38

   38 index: values . ']'

    ']'  shift, and go to state 65


State 39

   16 values: variable '[' index .

    $default  reduce using rule 16 (values)


State 40

   43 p: '(' . exp ')'

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '('  shift, and go to state 40
    '{'  shift, and go to state 20

    variable  go to state 21
    value     go to state 23
    exp       go to state 66
    mult      go to state 43
    factor    go to state 44
    p         go to state 45
    values    go to state 46
    array     go to state 25


State 41

   33 func_params: ')' .

    $default  reduce using rule 33 (func_params)


State 42

   31 func_params: exp . ',' func_params
   32            | exp . ')'
   48 exp: exp . as mult

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    ','  shift, and go to state 69
    ')'  shift, and go to state 70

    as  go to state 71


State 43

   49 exp: mult .
   50 mult: mult . md factor

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73

    $default  reduce using rule 49 (exp)

    md  go to state 74


State 44

   51 mult: factor .

    $default  reduce using rule 51 (mult)


State 45

   52 factor: p .

    $default  reduce using rule 52 (factor)


State 46

   53 factor: values .

    $default  reduce using rule 53 (factor)


State 47

   17 values: variable '(' func_params .

    $default  reduce using rule 17 (values)


State 48

   29 set_val: '=' exp .
   48 exp: exp . as mult

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68

    $default  reduce using rule 29 (set_val)

    as  go to state 71


State 49

   54 cond: IF . '[' conditions ']' '{' statements '}' elseif

    '['  shift, and go to state 75


State 50

   59 loop: WHILE . '[' conditions ']' '{' statements '}'

    '['  shift, and go to state 76


State 51

   39 io: READ . variable

    VAR  shift, and go to state 9

    variable  go to state 77


State 52

   40 io: WRITE . exp

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '('  shift, and go to state 40
    '{'  shift, and go to state 20

    variable  go to state 21
    value     go to state 23
    exp       go to state 78
    mult      go to state 43
    factor    go to state 44
    p         go to state 45
    values    go to state 46
    array     go to state 25


State 53

   23 return: RETURN . exp

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '('  shift, and go to state 40
    '{'  shift, and go to state 20

    variable  go to state 21
    value     go to state 23
    exp       go to state 79
    mult      go to state 43
    factor    go to state 44
    p         go to state 45
    values    go to state 46
    array     go to state 25


State 54

    6 statement: func_decl .

    $default  reduce using rule 6 (statement)


State 55

   21 func_decl: var_type FUNCTION variable '[' params ']' '{' statements . '}'
   22          | var_type FUNCTION variable '[' params ']' '{' statements . '}' func_decl

    '}'  shift, and go to state 80


State 56

    3 statements: statement . statements

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2
    IF       shift, and go to state 49
    WHILE    shift, and go to state 50
    READ     shift, and go to state 51
    WRITE    shift, and go to state 52
    RETURN   shift, and go to state 53
    VAR      shift, and go to state 9
    INT      shift, and go to state 10
    '{'      shift, and go to state 20

    $default  reduce using rule 4 (statements)

    variable    go to state 21
    func_decl   go to state 54
    statements  go to state 81
    statement   go to state 56
    var_decl    go to state 57
    cond        go to state 58
    loop        go to state 59
    io          go to state 60
    assignment  go to state 61
    return      go to state 62
    var_type    go to state 63
    value       go to state 23
    values      go to state 24
    array       go to state 25


State 57

    5 statement: var_decl . ';'

    ';'  shift, and go to state 82


State 58

    7 statement: cond .

    $default  reduce using rule 7 (statement)


State 59

    8 statement: loop .

    $default  reduce using rule 8 (statement)


State 60

    9 statement: io . ';'

    ';'  shift, and go to state 83


State 61

   10 statement: assignment . ';'

    ';'  shift, and go to state 84


State 62

   11 statement: return . ';'

    ';'  shift, and go to state 85


State 63

   12 var_decl: var_type . assignment
   21 func_decl: var_type . FUNCTION variable '[' params ']' '{' statements '}'
   22          | var_type . FUNCTION variable '[' params ']' '{' statements '}' func_decl

    FUNCTION  shift, and go to state 8
    VAR       shift, and go to state 9
    INT       shift, and go to state 10
    '{'       shift, and go to state 20

    variable    go to state 21
    assignment  go to state 22
    value       go to state 23
    values      go to state 24
    array       go to state 25


State 64

   36 arr_vals: values ',' arr_vals .

    $default  reduce using rule 36 (arr_vals)


State 65

   38 index: values ']' .

    $default  reduce using rule 38 (index)


State 66

   43 p: '(' exp . ')'
   48 exp: exp . as mult

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    ')'  shift, and go to state 86

    as  go to state 71


State 67

   41 as: '+' .

    $default  reduce using rule 41 (as)


State 68

   42 as: '-' .

    $default  reduce using rule 42 (as)


State 69

   31 func_params: exp ',' . func_params

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '('  shift, and go to state 40
    '{'  shift, and go to state 20
    ')'  shift, and go to state 41

    variable     go to state 21
    value        go to state 23
    exp          go to state 42
    mult         go to state 43
    factor       go to state 44
    p            go to state 45
    values       go to state 46
    array        go to state 25
    func_params  go to state 87


State 70

   32 func_params: exp ')' .

    $default  reduce using rule 32 (func_params)


State 71

   48 exp: exp as . mult

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '('  shift, and go to state 40
    '{'  shift, and go to state 20

    variable  go to state 21
    value     go to state 23
    mult      go to state 88
    factor    go to state 44
    p         go to state 45
    values    go to state 46
    array     go to state 25


State 72

   44 md: '*' .

    $default  reduce using rule 44 (md)


State 73

   45 md: '/' .

    $default  reduce using rule 45 (md)


State 74

   50 mult: mult md . factor

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '('  shift, and go to state 40
    '{'  shift, and go to state 20

    variable  go to state 21
    value     go to state 23
    factor    go to state 89
    p         go to state 45
    values    go to state 46
    array     go to state 25


State 75

   54 cond: IF '[' . conditions ']' '{' statements '}' elseif

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '('  shift, and go to state 90
    '{'  shift, and go to state 20

    variable    go to state 21
    value       go to state 23
    exp         go to state 91
    mult        go to state 43
    factor      go to state 44
    p           go to state 45
    values      go to state 46
    conditions  go to state 92
    condition   go to state 93
    array       go to state 25


State 76

   59 loop: WHILE '[' . conditions ']' '{' statements '}'

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '('  shift, and go to state 90
    '{'  shift, and go to state 20

    variable    go to state 21
    value       go to state 23
    exp         go to state 91
    mult        go to state 43
    factor      go to state 44
    p           go to state 45
    values      go to state 46
    conditions  go to state 94
    condition   go to state 93
    array       go to state 25


State 77

   39 io: READ variable .

    $default  reduce using rule 39 (io)


State 78

   40 io: WRITE exp .
   48 exp: exp . as mult

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68

    $default  reduce using rule 40 (io)

    as  go to state 71


State 79

   23 return: RETURN exp .
   48 exp: exp . as mult

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68

    $default  reduce using rule 23 (return)

    as  go to state 71


State 80

   21 func_decl: var_type FUNCTION variable '[' params ']' '{' statements '}' .
   22          | var_type FUNCTION variable '[' params ']' '{' statements '}' . func_decl

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2

    INTEGER   [reduce using rule 21 (func_decl)]
    ARRAY     [reduce using rule 21 (func_decl)]
    $default  reduce using rule 21 (func_decl)

    func_decl  go to state 95
    var_type   go to state 5


State 81

    3 statements: statement statements .

    $default  reduce using rule 3 (statements)


State 82

    5 statement: var_decl ';' .

    $default  reduce using rule 5 (statement)


State 83

    9 statement: io ';' .

    $default  reduce using rule 9 (statement)


State 84

   10 statement: assignment ';' .

    $default  reduce using rule 10 (statement)


State 85

   11 statement: return ';' .

    $default  reduce using rule 11 (statement)


State 86

   43 p: '(' exp ')' .

    $default  reduce using rule 43 (p)


State 87

   31 func_params: exp ',' func_params .

    $default  reduce using rule 31 (func_params)


State 88

   48 exp: exp as mult .
   50 mult: mult . md factor

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73

    $default  reduce using rule 48 (exp)

    md  go to state 74


State 89

   50 mult: mult md factor .

    $default  reduce using rule 50 (mult)


State 90

   43 p: '(' . exp ')'
   62 condition: '(' . condition conditional exp ')'

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '('  shift, and go to state 90
    '{'  shift, and go to state 20

    variable   go to state 21
    value      go to state 23
    exp        go to state 96
    mult       go to state 43
    factor     go to state 44
    p          go to state 45
    values     go to state 46
    condition  go to state 97
    array      go to state 25


State 91

   48 exp: exp . as mult
   61 condition: exp .

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68

    $default  reduce using rule 61 (condition)

    as  go to state 71


State 92

   54 cond: IF '[' conditions . ']' '{' statements '}' elseif

    ']'  shift, and go to state 98


State 93

   60 condition: condition . conditional exp
   69 conditions: condition .
   70           | condition . AND conditions
   71           | condition . OR conditions

    GTE    shift, and go to state 99
    LTE    shift, and go to state 100
    ISEQ   shift, and go to state 101
    NOTEQ  shift, and go to state 102
    AND    shift, and go to state 103
    OR     shift, and go to state 104
    '>'    shift, and go to state 105
    '<'    shift, and go to state 106

    $default  reduce using rule 69 (conditions)

    conditional  go to state 107


State 94

   59 loop: WHILE '[' conditions . ']' '{' statements '}'

    ']'  shift, and go to state 108


State 95

   22 func_decl: var_type FUNCTION variable '[' params ']' '{' statements '}' func_decl .

    $default  reduce using rule 22 (func_decl)


State 96

   43 p: '(' exp . ')'
   48 exp: exp . as mult
   61 condition: exp .

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    ')'  shift, and go to state 86

    $default  reduce using rule 61 (condition)

    as  go to state 71


State 97

   60 condition: condition . conditional exp
   62          | '(' condition . conditional exp ')'

    GTE    shift, and go to state 99
    LTE    shift, and go to state 100
    ISEQ   shift, and go to state 101
    NOTEQ  shift, and go to state 102
    '>'    shift, and go to state 105
    '<'    shift, and go to state 106

    conditional  go to state 109


State 98

   54 cond: IF '[' conditions ']' . '{' statements '}' elseif

    '{'  shift, and go to state 110


State 99

   65 conditional: GTE .

    $default  reduce using rule 65 (conditional)


State 100

   66 conditional: LTE .

    $default  reduce using rule 66 (conditional)


State 101

   67 conditional: ISEQ .

    $default  reduce using rule 67 (conditional)


State 102

   68 conditional: NOTEQ .

    $default  reduce using rule 68 (conditional)


State 103

   70 conditions: condition AND . conditions

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '('  shift, and go to state 90
    '{'  shift, and go to state 20

    variable    go to state 21
    value       go to state 23
    exp         go to state 91
    mult        go to state 43
    factor      go to state 44
    p           go to state 45
    values      go to state 46
    conditions  go to state 111
    condition   go to state 93
    array       go to state 25


State 104

   71 conditions: condition OR . conditions

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '('  shift, and go to state 90
    '{'  shift, and go to state 20

    variable    go to state 21
    value       go to state 23
    exp         go to state 91
    mult        go to state 43
    factor      go to state 44
    p           go to state 45
    values      go to state 46
    conditions  go to state 112
    condition   go to state 93
    array       go to state 25


State 105

   63 conditional: '>' .

    $default  reduce using rule 63 (conditional)


State 106

   64 conditional: '<' .

    $default  reduce using rule 64 (conditional)


State 107

   60 condition: condition conditional . exp

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '('  shift, and go to state 40
    '{'  shift, and go to state 20

    variable  go to state 21
    value     go to state 23
    exp       go to state 113
    mult      go to state 43
    factor    go to state 44
    p         go to state 45
    values    go to state 46
    array     go to state 25


State 108

   59 loop: WHILE '[' conditions ']' . '{' statements '}'

    '{'  shift, and go to state 114


State 109

   60 condition: condition conditional . exp
   62          | '(' condition conditional . exp ')'

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '('  shift, and go to state 40
    '{'  shift, and go to state 20

    variable  go to state 21
    value     go to state 23
    exp       go to state 115
    mult      go to state 43
    factor    go to state 44
    p         go to state 45
    values    go to state 46
    array     go to state 25


State 110

   54 cond: IF '[' conditions ']' '{' . statements '}' elseif

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2
    IF       shift, and go to state 49
    WHILE    shift, and go to state 50
    READ     shift, and go to state 51
    WRITE    shift, and go to state 52
    RETURN   shift, and go to state 53
    VAR      shift, and go to state 9
    INT      shift, and go to state 10
    '{'      shift, and go to state 20

    $default  reduce using rule 4 (statements)

    variable    go to state 21
    func_decl   go to state 54
    statements  go to state 116
    statement   go to state 56
    var_decl    go to state 57
    cond        go to state 58
    loop        go to state 59
    io          go to state 60
    assignment  go to state 61
    return      go to state 62
    var_type    go to state 63
    value       go to state 23
    values      go to state 24
    array       go to state 25


State 111

   70 conditions: condition AND conditions .

    $default  reduce using rule 70 (conditions)


State 112

   71 conditions: condition OR conditions .

    $default  reduce using rule 71 (conditions)


State 113

   48 exp: exp . as mult
   60 condition: condition conditional exp .

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68

    $default  reduce using rule 60 (condition)

    as  go to state 71


State 114

   59 loop: WHILE '[' conditions ']' '{' . statements '}'

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2
    IF       shift, and go to state 49
    WHILE    shift, and go to state 50
    READ     shift, and go to state 51
    WRITE    shift, and go to state 52
    RETURN   shift, and go to state 53
    VAR      shift, and go to state 9
    INT      shift, and go to state 10
    '{'      shift, and go to state 20

    $default  reduce using rule 4 (statements)

    variable    go to state 21
    func_decl   go to state 54
    statements  go to state 117
    statement   go to state 56
    var_decl    go to state 57
    cond        go to state 58
    loop        go to state 59
    io          go to state 60
    assignment  go to state 61
    return      go to state 62
    var_type    go to state 63
    value       go to state 23
    values      go to state 24
    array       go to state 25


State 115

   48 exp: exp . as mult
   60 condition: condition conditional exp .
   62          | '(' condition conditional exp . ')'

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    ')'  shift, and go to state 118

    $default  reduce using rule 60 (condition)

    as  go to state 71


State 116

   54 cond: IF '[' conditions ']' '{' statements . '}' elseif

    '}'  shift, and go to state 119


State 117

   59 loop: WHILE '[' conditions ']' '{' statements . '}'

    '}'  shift, and go to state 120


State 118

   62 condition: '(' condition conditional exp ')' .

    $default  reduce using rule 62 (condition)


State 119

   54 cond: IF '[' conditions ']' '{' statements '}' . elseif

    ELSE    shift, and go to state 121
    ELSEIF  shift, and go to state 122

    $default  reduce using rule 58 (else)

    elseif  go to state 123
    else    go to state 124


State 120

   59 loop: WHILE '[' conditions ']' '{' statements '}' .

    $default  reduce using rule 59 (loop)


State 121

   57 else: ELSE . '{' statements '}'

    '{'  shift, and go to state 125


State 122

   55 elseif: ELSEIF . '[' conditions ']' '{' statements '}' elseif

    '['  shift, and go to state 126


State 123

   54 cond: IF '[' conditions ']' '{' statements '}' elseif .

    $default  reduce using rule 54 (cond)


State 124

   56 elseif: else .

    $default  reduce using rule 56 (elseif)


State 125

   57 else: ELSE '{' . statements '}'

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2
    IF       shift, and go to state 49
    WHILE    shift, and go to state 50
    READ     shift, and go to state 51
    WRITE    shift, and go to state 52
    RETURN   shift, and go to state 53
    VAR      shift, and go to state 9
    INT      shift, and go to state 10
    '{'      shift, and go to state 20

    $default  reduce using rule 4 (statements)

    variable    go to state 21
    func_decl   go to state 54
    statements  go to state 127
    statement   go to state 56
    var_decl    go to state 57
    cond        go to state 58
    loop        go to state 59
    io          go to state 60
    assignment  go to state 61
    return      go to state 62
    var_type    go to state 63
    value       go to state 23
    values      go to state 24
    array       go to state 25


State 126

   55 elseif: ELSEIF '[' . conditions ']' '{' statements '}' elseif

    VAR  shift, and go to state 9
    INT  shift, and go to state 10
    '('  shift, and go to state 90
    '{'  shift, and go to state 20

    variable    go to state 21
    value       go to state 23
    exp         go to state 91
    mult        go to state 43
    factor      go to state 44
    p           go to state 45
    values      go to state 46
    conditions  go to state 128
    condition   go to state 93
    array       go to state 25


State 127

   57 else: ELSE '{' statements . '}'

    '}'  shift, and go to state 129


State 128

   55 elseif: ELSEIF '[' conditions . ']' '{' statements '}' elseif

    ']'  shift, and go to state 130


State 129

   57 else: ELSE '{' statements '}' .

    $default  reduce using rule 57 (else)


State 130

   55 elseif: ELSEIF '[' conditions ']' . '{' statements '}' elseif

    '{'  shift, and go to state 131


State 131

   55 elseif: ELSEIF '[' conditions ']' '{' . statements '}' elseif

    INTEGER  shift, and go to state 1
    ARRAY    shift, and go to state 2
    IF       shift, and go to state 49
    WHILE    shift, and go to state 50
    READ     shift, and go to state 51
    WRITE    shift, and go to state 52
    RETURN   shift, and go to state 53
    VAR      shift, and go to state 9
    INT      shift, and go to state 10
    '{'      shift, and go to state 20

    $default  reduce using rule 4 (statements)

    variable    go to state 21
    func_decl   go to state 54
    statements  go to state 132
    statement   go to state 56
    var_decl    go to state 57
    cond        go to state 58
    loop        go to state 59
    io          go to state 60
    assignment  go to state 61
    return      go to state 62
    var_type    go to state 63
    value       go to state 23
    values      go to state 24
    array       go to state 25


State 132

   55 elseif: ELSEIF '[' conditions ']' '{' statements . '}' elseif

    '}'  shift, and go to state 133


State 133

   55 elseif: ELSEIF '[' conditions ']' '{' statements '}' . elseif

    ELSE    shift, and go to state 121
    ELSEIF  shift, and go to state 122

    $default  reduce using rule 58 (else)

    elseif  go to state 134
    else    go to state 124


State 134

   55 elseif: ELSEIF '[' conditions ']' '{' statements '}' elseif .

    $default  reduce using rule 55 (elseif)
